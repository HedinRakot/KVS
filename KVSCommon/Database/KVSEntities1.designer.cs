#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KVSCommon.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Test")]
	public partial class KVSEntities : KVSCommon.Entities.move_to_DataAccess.EntitiesBase
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBankAccount(BankAccount instance);
    partial void UpdateBankAccount(BankAccount instance);
    partial void DeleteBankAccount(BankAccount instance);
    partial void InsertCarOwner(CarOwner instance);
    partial void UpdateCarOwner(CarOwner instance);
    partial void DeleteCarOwner(CarOwner instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertCostCenter(CostCenter instance);
    partial void UpdateCostCenter(CostCenter instance);
    partial void DeleteCostCenter(CostCenter instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDeregistrationOrder(DeregistrationOrder instance);
    partial void UpdateDeregistrationOrder(DeregistrationOrder instance);
    partial void DeleteDeregistrationOrder(DeregistrationOrder instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertLogType(LogType instance);
    partial void UpdateLogType(LogType instance);
    partial void DeleteLogType(LogType instance);
    partial void InsertOrderInvoice(OrderInvoice instance);
    partial void UpdateOrderInvoice(OrderInvoice instance);
    partial void DeleteOrderInvoice(OrderInvoice instance);
    partial void InsertOrderItemStatus(OrderItemStatus instance);
    partial void UpdateOrderItemStatus(OrderItemStatus instance);
    partial void DeleteOrderItemStatus(OrderItemStatus instance);
    partial void InsertOrderType(OrderType instance);
    partial void UpdateOrderType(OrderType instance);
    partial void DeleteOrderType(OrderType instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertPermissionProfile(PermissionProfile instance);
    partial void UpdatePermissionProfile(PermissionProfile instance);
    partial void DeletePermissionProfile(PermissionProfile instance);
    partial void InsertPermissionProfilePermission(PermissionProfilePermission instance);
    partial void UpdatePermissionProfilePermission(PermissionProfilePermission instance);
    partial void DeletePermissionProfilePermission(PermissionProfilePermission instance);
    partial void InsertSmallCustomer(SmallCustomer instance);
    partial void UpdateSmallCustomer(SmallCustomer instance);
    partial void DeleteSmallCustomer(SmallCustomer instance);
    partial void InsertUserPermission(UserPermission instance);
    partial void UpdateUserPermission(UserPermission instance);
    partial void DeleteUserPermission(UserPermission instance);
    partial void InsertUserPermissionProfile(UserPermissionProfile instance);
    partial void UpdateUserPermissionProfile(UserPermissionProfile instance);
    partial void DeleteUserPermissionProfile(UserPermissionProfile instance);
    partial void InsertSystemlog(Systemlog instance);
    partial void UpdateSystemlog(Systemlog instance);
    partial void DeleteSystemlog(Systemlog instance);
    partial void InsertAdress(Adress instance);
    partial void UpdateAdress(Adress instance);
    partial void DeleteAdress(Adress instance);
    partial void InsertOrderStatus(OrderStatus instance);
    partial void UpdateOrderStatus(OrderStatus instance);
    partial void DeleteOrderStatus(OrderStatus instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertOrderItem(OrderItem instance);
    partial void UpdateOrderItem(OrderItem instance);
    partial void DeleteOrderItem(OrderItem instance);
    partial void InsertRegistrationOrderType(RegistrationOrderType instance);
    partial void UpdateRegistrationOrderType(RegistrationOrderType instance);
    partial void DeleteRegistrationOrderType(RegistrationOrderType instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertMailinglist(Mailinglist instance);
    partial void UpdateMailinglist(Mailinglist instance);
    partial void DeleteMailinglist(Mailinglist instance);
    partial void InsertRegistration(Registration instance);
    partial void UpdateRegistration(Registration instance);
    partial void DeleteRegistration(Registration instance);
    partial void InsertRegistrationOrder(RegistrationOrder instance);
    partial void UpdateRegistrationOrder(RegistrationOrder instance);
    partial void DeleteRegistrationOrder(RegistrationOrder instance);
    partial void InsertMake(Make instance);
    partial void UpdateMake(Make instance);
    partial void DeleteMake(Make instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoiceNumber(InvoiceNumber instance);
    partial void UpdateInvoiceNumber(InvoiceNumber instance);
    partial void DeleteInvoiceNumber(InvoiceNumber instance);
    partial void InsertLargeCustomerRequiredField(LargeCustomerRequiredField instance);
    partial void UpdateLargeCustomerRequiredField(LargeCustomerRequiredField instance);
    partial void DeleteLargeCustomerRequiredField(LargeCustomerRequiredField instance);
    partial void InsertRequiredField(RequiredField instance);
    partial void UpdateRequiredField(RequiredField instance);
    partial void DeleteRequiredField(RequiredField instance);
    partial void InsertPackingList(PackingList instance);
    partial void UpdatePackingList(PackingList instance);
    partial void DeletePackingList(PackingList instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertMailinglistType(MailinglistType instance);
    partial void UpdateMailinglistType(MailinglistType instance);
    partial void DeleteMailinglistType(MailinglistType instance);
    partial void InsertWebServiceLogin(WebServiceLogin instance);
    partial void UpdateWebServiceLogin(WebServiceLogin instance);
    partial void DeleteWebServiceLogin(WebServiceLogin instance);
    partial void InsertWebServiceLoginCustomer(WebServiceLoginCustomer instance);
    partial void UpdateWebServiceLoginCustomer(WebServiceLoginCustomer instance);
    partial void DeleteWebServiceLoginCustomer(WebServiceLoginCustomer instance);
    partial void InsertDocumentConfiguration(DocumentConfiguration instance);
    partial void UpdateDocumentConfiguration(DocumentConfiguration instance);
    partial void DeleteDocumentConfiguration(DocumentConfiguration instance);
    partial void InsertInvoiceItem(InvoiceItem instance);
    partial void UpdateInvoiceItem(InvoiceItem instance);
    partial void DeleteInvoiceItem(InvoiceItem instance);
    partial void InsertPrice(Price instance);
    partial void UpdatePrice(Price instance);
    partial void DeletePrice(Price instance);
    partial void InsertPriceAccount(PriceAccount instance);
    partial void UpdatePriceAccount(PriceAccount instance);
    partial void DeletePriceAccount(PriceAccount instance);
    partial void InsertInvoiceItemAccountItem(InvoiceItemAccountItem instance);
    partial void UpdateInvoiceItemAccountItem(InvoiceItemAccountItem instance);
    partial void DeleteInvoiceItemAccountItem(InvoiceItemAccountItem instance);
    partial void InsertProductCategory(ProductCategory instance);
    partial void UpdateProductCategory(ProductCategory instance);
    partial void DeleteProductCategory(ProductCategory instance);
    partial void InsertAccounts(Accounts instance);
    partial void UpdateAccounts(Accounts instance);
    partial void DeleteAccounts(Accounts instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertLargeCustomer(LargeCustomer instance);
    partial void UpdateLargeCustomer(LargeCustomer instance);
    partial void DeleteLargeCustomer(LargeCustomer instance);
    partial void InsertInvoiceTypes(InvoiceTypes instance);
    partial void UpdateInvoiceTypes(InvoiceTypes instance);
    partial void DeleteInvoiceTypes(InvoiceTypes instance);
    partial void InsertRegistrationLocation(RegistrationLocation instance);
    partial void UpdateRegistrationLocation(RegistrationLocation instance);
    partial void DeleteRegistrationLocation(RegistrationLocation instance);
    partial void InsertRequiredFieldTranslation(RequiredFieldTranslation instance);
    partial void UpdateRequiredFieldTranslation(RequiredFieldTranslation instance);
    partial void DeleteRequiredFieldTranslation(RequiredFieldTranslation instance);
    partial void InsertInvoiceRunReport(InvoiceRunReport instance);
    partial void UpdateInvoiceRunReport(InvoiceRunReport instance);
    partial void DeleteInvoiceRunReport(InvoiceRunReport instance);
    partial void InsertBIC_DE(BIC_DE instance);
    partial void UpdateBIC_DE(BIC_DE instance);
    partial void DeleteBIC_DE(BIC_DE instance);
    partial void InsertChangeLogColumNames(ChangeLogColumNames instance);
    partial void UpdateChangeLogColumNames(ChangeLogColumNames instance);
    partial void DeleteChangeLogColumNames(ChangeLogColumNames instance);
    partial void InsertCustomerProduct(CustomerProduct instance);
    partial void UpdateCustomerProduct(CustomerProduct instance);
    partial void DeleteCustomerProduct(CustomerProduct instance);
    partial void InsertDocketList(DocketList instance);
    partial void UpdateDocketList(DocketList instance);
    partial void DeleteDocketList(DocketList instance);
    #endregion
		
		public KVSEntities(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KVSEntities(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KVSEntities(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KVSEntities(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BankAccount> BankAccount
		{
			get
			{
				return this.GetTable<BankAccount>();
			}
		}
		
		public System.Data.Linq.Table<CarOwner> CarOwner
		{
			get
			{
				return this.GetTable<CarOwner>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contact
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<CostCenter> CostCenter
		{
			get
			{
				return this.GetTable<CostCenter>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<DeregistrationOrder> DeregistrationOrder
		{
			get
			{
				return this.GetTable<DeregistrationOrder>();
			}
		}
		
		public System.Data.Linq.Table<Location> Location
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<LogType> LogType
		{
			get
			{
				return this.GetTable<LogType>();
			}
		}
		
		public System.Data.Linq.Table<OrderInvoice> OrderInvoice
		{
			get
			{
				return this.GetTable<OrderInvoice>();
			}
		}
		
		public System.Data.Linq.Table<OrderItemStatus> OrderItemStatus
		{
			get
			{
				return this.GetTable<OrderItemStatus>();
			}
		}
		
		public System.Data.Linq.Table<OrderType> OrderType
		{
			get
			{
				return this.GetTable<OrderType>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permission
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<PermissionProfile> PermissionProfile
		{
			get
			{
				return this.GetTable<PermissionProfile>();
			}
		}
		
		public System.Data.Linq.Table<PermissionProfilePermission> PermissionProfilePermission
		{
			get
			{
				return this.GetTable<PermissionProfilePermission>();
			}
		}
		
		public System.Data.Linq.Table<SmallCustomer> SmallCustomer
		{
			get
			{
				return this.GetTable<SmallCustomer>();
			}
		}
		
		public System.Data.Linq.Table<UserPermission> UserPermission
		{
			get
			{
				return this.GetTable<UserPermission>();
			}
		}
		
		public System.Data.Linq.Table<UserPermissionProfile> UserPermissionProfile
		{
			get
			{
				return this.GetTable<UserPermissionProfile>();
			}
		}
		
		public System.Data.Linq.Table<Systemlog> Systemlog
		{
			get
			{
				return this.GetTable<Systemlog>();
			}
		}
		
		public System.Data.Linq.Table<Adress> Adress
		{
			get
			{
				return this.GetTable<Adress>();
			}
		}
		
		public System.Data.Linq.Table<OrderStatus> OrderStatus
		{
			get
			{
				return this.GetTable<OrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItem
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<RegistrationOrderType> RegistrationOrderType
		{
			get
			{
				return this.GetTable<RegistrationOrderType>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentType
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<Document> Document
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<Mailinglist> Mailinglist
		{
			get
			{
				return this.GetTable<Mailinglist>();
			}
		}
		
		public System.Data.Linq.Table<Registration> Registration
		{
			get
			{
				return this.GetTable<Registration>();
			}
		}
		
		public System.Data.Linq.Table<RegistrationOrder> RegistrationOrder
		{
			get
			{
				return this.GetTable<RegistrationOrder>();
			}
		}
		
		public System.Data.Linq.Table<Make> Make
		{
			get
			{
				return this.GetTable<Make>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicle
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoice
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNumber> InvoiceNumber
		{
			get
			{
				return this.GetTable<InvoiceNumber>();
			}
		}
		
		public System.Data.Linq.Table<LargeCustomerRequiredField> LargeCustomerRequiredField
		{
			get
			{
				return this.GetTable<LargeCustomerRequiredField>();
			}
		}
		
		public System.Data.Linq.Table<RequiredField> RequiredField
		{
			get
			{
				return this.GetTable<RequiredField>();
			}
		}
		
		public System.Data.Linq.Table<PackingList> PackingList
		{
			get
			{
				return this.GetTable<PackingList>();
			}
		}
		
		public System.Data.Linq.Table<Order> Order
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<MailinglistType> MailinglistType
		{
			get
			{
				return this.GetTable<MailinglistType>();
			}
		}
		
		public System.Data.Linq.Table<WebServiceLogin> WebServiceLogin
		{
			get
			{
				return this.GetTable<WebServiceLogin>();
			}
		}
		
		public System.Data.Linq.Table<WebServiceLoginCustomer> WebServiceLoginCustomer
		{
			get
			{
				return this.GetTable<WebServiceLoginCustomer>();
			}
		}
		
		public System.Data.Linq.Table<DocumentConfiguration> DocumentConfiguration
		{
			get
			{
				return this.GetTable<DocumentConfiguration>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceItem> InvoiceItem
		{
			get
			{
				return this.GetTable<InvoiceItem>();
			}
		}
		
		public System.Data.Linq.Table<Price> Price
		{
			get
			{
				return this.GetTable<Price>();
			}
		}
		
		public System.Data.Linq.Table<PriceAccount> PriceAccount
		{
			get
			{
				return this.GetTable<PriceAccount>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceItemAccountItem> InvoiceItemAccountItem
		{
			get
			{
				return this.GetTable<InvoiceItemAccountItem>();
			}
		}
		
		public System.Data.Linq.Table<ProductCategory> ProductCategory
		{
			get
			{
				return this.GetTable<ProductCategory>();
			}
		}
		
		public System.Data.Linq.Table<Accounts> Accounts
		{
			get
			{
				return this.GetTable<Accounts>();
			}
		}
		
		public System.Data.Linq.Table<Product> Product
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<temp_Customers2> temp_Customers2
		{
			get
			{
				return this.GetTable<temp_Customers2>();
			}
		}
		
		public System.Data.Linq.Table<Person> Person
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<LargeCustomer> LargeCustomer
		{
			get
			{
				return this.GetTable<LargeCustomer>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceTypes> InvoiceTypes
		{
			get
			{
				return this.GetTable<InvoiceTypes>();
			}
		}
		
		public System.Data.Linq.Table<temp_Products> temp_Products
		{
			get
			{
				return this.GetTable<temp_Products>();
			}
		}
		
		public System.Data.Linq.Table<RegistrationLocation> RegistrationLocation
		{
			get
			{
				return this.GetTable<RegistrationLocation>();
			}
		}
		
		public System.Data.Linq.Table<RequiredFieldTranslation> RequiredFieldTranslation
		{
			get
			{
				return this.GetTable<RequiredFieldTranslation>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceRunReport> InvoiceRunReport
		{
			get
			{
				return this.GetTable<InvoiceRunReport>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceIDInvoiceRunID> InvoiceIDInvoiceRunID
		{
			get
			{
				return this.GetTable<InvoiceIDInvoiceRunID>();
			}
		}
		
		public System.Data.Linq.Table<BIC_DE> BIC_DE
		{
			get
			{
				return this.GetTable<BIC_DE>();
			}
		}
		
		public System.Data.Linq.Table<PathPosition> PathPosition
		{
			get
			{
				return this.GetTable<PathPosition>();
			}
		}
		
		public System.Data.Linq.Table<ChangeLog> ChangeLog
		{
			get
			{
				return this.GetTable<ChangeLog>();
			}
		}
		
		public System.Data.Linq.Table<ChangeLogColumNames> ChangeLogColumNames
		{
			get
			{
				return this.GetTable<ChangeLogColumNames>();
			}
		}
		
		public System.Data.Linq.Table<CustomerProduct> CustomerProduct
		{
			get
			{
				return this.GetTable<CustomerProduct>();
			}
		}
		
		public System.Data.Linq.Table<DocketList> DocketList
		{
			get
			{
				return this.GetTable<DocketList>();
			}
		}
		
		public System.Data.Linq.Table<AuthorativeChargeAccounts> AuthorativeChargeAccounts
		{
			get
			{
				return this.GetTable<AuthorativeChargeAccounts>();
			}
		}
		
		public System.Data.Linq.Table<GetAccountNumber> GetAccountNumbers
		{
			get
			{
				return this.GetTable<GetAccountNumber>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankAccount")]
	public partial class BankAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _BankName;
		
		private string _Accountnumber;
		
		private string _BankCode;
		
		private string _IBAN;
		
		private string _BIC;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private EntitySet<CarOwner> _CarOwner;
		
		private EntitySet<CostCenter> _CostCenter;
		
		private EntitySet<SmallCustomer> _SmallCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnAccountnumberChanging(string value);
    partial void OnAccountnumberChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnIBANChanging(string value);
    partial void OnIBANChanged();
    partial void OnBICChanging(string value);
    partial void OnBICChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public BankAccount()
		{
			this._CarOwner = new EntitySet<CarOwner>(new Action<CarOwner>(this.attach_CarOwner), new Action<CarOwner>(this.detach_CarOwner));
			this._CostCenter = new EntitySet<CostCenter>(new Action<CostCenter>(this.attach_CostCenter), new Action<CostCenter>(this.detach_CostCenter));
			this._SmallCustomer = new EntitySet<SmallCustomer>(new Action<SmallCustomer>(this.attach_SmallCustomer), new Action<SmallCustomer>(this.detach_SmallCustomer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int  NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(100) NOT NULL")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accountnumber", DbType="VarChar(50) NOT NULL")]
		public string Accountnumber
		{
			get
			{
				return this._Accountnumber;
			}
			set
			{
				if ((this._Accountnumber != value))
				{
					this.OnAccountnumberChanging(value);
					this.SendPropertyChanging();
					this._Accountnumber = value;
					this.SendPropertyChanged("Accountnumber");
					this.OnAccountnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="VarChar(50) NOT NULL")]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBAN", DbType="VarChar(100)")]
		public string IBAN
		{
			get
			{
				return this._IBAN;
			}
			set
			{
				if ((this._IBAN != value))
				{
					this.OnIBANChanging(value);
					this.SendPropertyChanging();
					this._IBAN = value;
					this.SendPropertyChanged("IBAN");
					this.OnIBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIC")]
		public string BIC
		{
			get
			{
				return this._BIC;
			}
			set
			{
				if ((this._BIC != value))
				{
					this.OnBICChanging(value);
					this.SendPropertyChanging();
					this._BIC = value;
					this.SendPropertyChanged("BIC");
					this.OnBICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccount_CarOwner", Storage="_CarOwner", ThisKey="Id", OtherKey="BankAccountId")]
		public EntitySet<CarOwner> CarOwner
		{
			get
			{
				return this._CarOwner;
			}
			set
			{
				this._CarOwner.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccount_CostCenter", Storage="_CostCenter", ThisKey="Id", OtherKey="BankAccountId")]
		public EntitySet<CostCenter> CostCenter
		{
			get
			{
				return this._CostCenter;
			}
			set
			{
				this._CostCenter.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccount_SmallCustomer", Storage="_SmallCustomer", ThisKey="Id", OtherKey="BankAccountId")]
		public EntitySet<SmallCustomer> SmallCustomer
		{
			get
			{
				return this._SmallCustomer;
			}
			set
			{
				this._SmallCustomer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarOwner(CarOwner entity)
		{
			this.SendPropertyChanging();
			entity.BankAccount = this;
		}
		
		private void detach_CarOwner(CarOwner entity)
		{
			this.SendPropertyChanging();
			entity.BankAccount = null;
		}
		
		private void attach_CostCenter(CostCenter entity)
		{
			this.SendPropertyChanging();
			entity.BankAccount = this;
		}
		
		private void detach_CostCenter(CostCenter entity)
		{
			this.SendPropertyChanging();
			entity.BankAccount = null;
		}
		
		private void attach_SmallCustomer(SmallCustomer entity)
		{
			this.SendPropertyChanging();
			entity.BankAccount = this;
		}
		
		private void detach_SmallCustomer(SmallCustomer entity)
		{
			this.SendPropertyChanging();
			entity.BankAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarOwner")]
	public partial class CarOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Vorname;
		
		private System.Nullable<int> _AdressId;
		
		private System.Nullable<int> _ContactId;
		
		private System.Nullable<int> _BankAccountId;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private EntitySet<Registration> _Registration;
		
		private EntityRef<BankAccount> _BankAccount;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Adress> _Adress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnAdressIdChanging(System.Nullable<int> value);
    partial void OnAdressIdChanged();
    partial void OnContactIdChanging(System.Nullable<int> value);
    partial void OnContactIdChanged();
    partial void OnBankAccountIdChanging(System.Nullable<int> value);
    partial void OnBankAccountIdChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public CarOwner()
		{
			this._Registration = new EntitySet<Registration>(new Action<Registration>(this.attach_Registration), new Action<Registration>(this.detach_Registration));
			this._BankAccount = default(EntityRef<BankAccount>);
			this._Contact = default(EntityRef<Contact>);
			this._Adress = default(EntityRef<Adress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Firstname", Storage="_Vorname", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._Vorname;
			}
			set
			{
				if ((this._Vorname != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._Vorname = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressId", DbType="int")]
		public System.Nullable<int> AdressId
		{
			get
			{
				return this._AdressId;
			}
			set
			{
				if ((this._AdressId != value))
				{
					if (this._Adress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdressIdChanging(value);
					this.SendPropertyChanging();
					this._AdressId = value;
					this.SendPropertyChanged("AdressId");
					this.OnAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="int")]
		public System.Nullable<int> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="int")]
		public System.Nullable<int> BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._BankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOwner_Registration", Storage="_Registration", ThisKey="Id", OtherKey="CarOwnerId")]
		public EntitySet<Registration> Registration
		{
			get
			{
				return this._Registration;
			}
			set
			{
				this._Registration.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccount_CarOwner", Storage="_BankAccount", ThisKey="BankAccountId", OtherKey="Id", IsForeignKey=true)]
		public BankAccount BankAccount
		{
			get
			{
				return this._BankAccount.Entity;
			}
			set
			{
				BankAccount previousValue = this._BankAccount.Entity;
				if (((previousValue != value) 
							|| (this._BankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccount.Entity = null;
						previousValue.CarOwner.Remove(this);
					}
					this._BankAccount.Entity = value;
					if ((value != null))
					{
						value.CarOwner.Add(this);
						this._BankAccountId = value.Id;
					}
					else
					{
						this._BankAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_CarOwner", Storage="_Contact", ThisKey="ContactId", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.CarOwner.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.CarOwner.Add(this);
						this._ContactId = value.Id;
					}
					else
					{
						this._ContactId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_CarOwner", Storage="_Adress", ThisKey="AdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress Adress
		{
			get
			{
				return this._Adress.Entity;
			}
			set
			{
				Adress previousValue = this._Adress.Entity;
				if (((previousValue != value) 
							|| (this._Adress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adress.Entity = null;
						previousValue.CarOwner.Remove(this);
					}
					this._Adress.Entity = value;
					if ((value != null))
					{
						value.CarOwner.Add(this);
						this._AdressId = value.Id;
					}
					else
					{
						this._AdressId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Adress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Registration(Registration entity)
		{
			this.SendPropertyChanging();
			entity.CarOwner = this;
		}
		
		private void detach_Registration(Registration entity)
		{
			this.SendPropertyChanging();
			entity.CarOwner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _MobilePhone;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private EntitySet<CarOwner> _CarOwner;
		
		private EntitySet<Customer> _Customer;
		
		private EntitySet<Location> _Location;
		
		private EntitySet<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public Contact()
		{
			this._CarOwner = new EntitySet<CarOwner>(new Action<CarOwner>(this.attach_CarOwner), new Action<CarOwner>(this.detach_CarOwner));
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			this._Location = new EntitySet<Location>(new Action<Location>(this.attach_Location), new Action<Location>(this.detach_Location));
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_CarOwner", Storage="_CarOwner", ThisKey="Id", OtherKey="ContactId")]
		public EntitySet<CarOwner> CarOwner
		{
			get
			{
				return this._CarOwner;
			}
			set
			{
				this._CarOwner.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Customer", Storage="_Customer", ThisKey="Id", OtherKey="ContactId")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Location", Storage="_Location", ThisKey="Id", OtherKey="ContactId")]
		public EntitySet<Location> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_User", Storage="_User", ThisKey="Id", OtherKey="ContactId")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarOwner(CarOwner entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_CarOwner(CarOwner entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostCenter")]
	public partial class CostCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CustomerId;
		
		private System.Nullable<int> _BankAccountId;
		
		private string _Name;
		
		private string _CostcenterNumber;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<OrderItem> _OrderItem;
		
		private EntitySet<InvoiceItem> _InvoiceItem;
		
		private EntityRef<BankAccount> _BankAccount;
		
		private EntityRef<LargeCustomer> _LargeCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnBankAccountIdChanging(System.Nullable<int> value);
    partial void OnBankAccountIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCostcenterNumberChanging(string value);
    partial void OnCostcenterNumberChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public CostCenter()
		{
			this._OrderItem = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItem), new Action<OrderItem>(this.detach_OrderItem));
			this._InvoiceItem = new EntitySet<InvoiceItem>(new Action<InvoiceItem>(this.attach_InvoiceItem), new Action<InvoiceItem>(this.detach_InvoiceItem));
			this._BankAccount = default(EntityRef<BankAccount>);
			this._LargeCustomer = default(EntityRef<LargeCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._LargeCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="int")]
		public System.Nullable<int> BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._BankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="varchar(50)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostcenterNumber", DbType="varchar(20) not null", CanBeNull=false)]
		public string CostcenterNumber
		{
			get
			{
				return this._CostcenterNumber;
			}
			set
			{
				if ((this._CostcenterNumber != value))
				{
					this.OnCostcenterNumberChanging(value);
					this.SendPropertyChanging();
					this._CostcenterNumber = value;
					this.SendPropertyChanged("CostcenterNumber");
					this.OnCostcenterNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostCenter_OrderItem", Storage="_OrderItem", ThisKey="Id", OtherKey="CostCenterId")]
		public EntitySet<OrderItem> OrderItem
		{
			get
			{
				return this._OrderItem;
			}
			set
			{
				this._OrderItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostCenter_InvoiceItem", Storage="_InvoiceItem", ThisKey="Id", OtherKey="CostcenterId")]
		public EntitySet<InvoiceItem> InvoiceItem
		{
			get
			{
				return this._InvoiceItem;
			}
			set
			{
				this._InvoiceItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccount_CostCenter", Storage="_BankAccount", ThisKey="BankAccountId", OtherKey="Id", IsForeignKey=true)]
		public BankAccount BankAccount
		{
			get
			{
				return this._BankAccount.Entity;
			}
			set
			{
				BankAccount previousValue = this._BankAccount.Entity;
				if (((previousValue != value) 
							|| (this._BankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccount.Entity = null;
						previousValue.CostCenter.Remove(this);
					}
					this._BankAccount.Entity = value;
					if ((value != null))
					{
						value.CostCenter.Add(this);
						this._BankAccountId = value.Id;
					}
					else
					{
						this._BankAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LargeCustomer_CostCenter", Storage="_LargeCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public LargeCustomer LargeCustomer
		{
			get
			{
				return this._LargeCustomer.Entity;
			}
			set
			{
				LargeCustomer previousValue = this._LargeCustomer.Entity;
				if (((previousValue != value) 
							|| (this._LargeCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LargeCustomer.Entity = null;
						previousValue.CostCenter.Remove(this);
					}
					this._LargeCustomer.Entity = value;
					if ((value != null))
					{
						value.CostCenter.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("LargeCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.CostCenter = this;
		}
		
		private void detach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.CostCenter = null;
		}
		
		private void attach_InvoiceItem(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.CostCenter = this;
		}
		
		private void detach_InvoiceItem(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.CostCenter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<int> _ContactId;
		
		private int _AdressId;
		
		private decimal _VAT;
		
		private int _InvoiceAdressId;
		
		private int _InvoiceDispatchAdressId;
		
		private System.Nullable<int> _TermOfCredit;
		
		private string _Debitornumber;
		
		private string _MatchCode;
		
		private string _CustomerNumber;
		
		private string _eVB_Number;
		
		private System.Nullable<int> _InternalId;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private EntityRef<SmallCustomer> _SmallCustomer;
		
		private EntitySet<Invoice> _Invoice;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<WebServiceLoginCustomer> _WebServiceLoginCustomer;
		
		private EntityRef<LargeCustomer> _LargeCustomer;
		
		private EntitySet<CustomerProduct> _CustomerProduct;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Adress> _Adress;
		
		private EntityRef<Adress> _InvoiceAdress;
		
		private EntityRef<Adress> _InvoiceDispatchAdress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContactIdChanging(System.Nullable<int> value);
    partial void OnContactIdChanged();
    partial void OnAdressIdChanging(int value);
    partial void OnAdressIdChanged();
    partial void OnVATChanging(decimal value);
    partial void OnVATChanged();
    partial void OnInvoiceAdressIdChanging(int value);
    partial void OnInvoiceAdressIdChanged();
    partial void OnInvoiceDispatchAdressIdChanging(int value);
    partial void OnInvoiceDispatchAdressIdChanged();
    partial void OnTermOfCreditChanging(System.Nullable<int> value);
    partial void OnTermOfCreditChanged();
    partial void OnDebitornumberChanging(string value);
    partial void OnDebitornumberChanged();
    partial void OnMatchCodeChanging(string value);
    partial void OnMatchCodeChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OneVB_NumberChanging(string value);
    partial void OneVB_NumberChanged();
    partial void OnInternalIdChanging(System.Nullable<int> value);
    partial void OnInternalIdChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public Customer()
		{
			this._SmallCustomer = default(EntityRef<SmallCustomer>);
			this._Invoice = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice), new Action<Invoice>(this.detach_Invoice));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._WebServiceLoginCustomer = new EntitySet<WebServiceLoginCustomer>(new Action<WebServiceLoginCustomer>(this.attach_WebServiceLoginCustomer), new Action<WebServiceLoginCustomer>(this.detach_WebServiceLoginCustomer));
			this._LargeCustomer = default(EntityRef<LargeCustomer>);
			this._CustomerProduct = new EntitySet<CustomerProduct>(new Action<CustomerProduct>(this.attach_CustomerProduct), new Action<CustomerProduct>(this.detach_CustomerProduct));
			this._Contact = default(EntityRef<Contact>);
			this._Adress = default(EntityRef<Adress>);
			this._InvoiceAdress = default(EntityRef<Adress>);
			this._InvoiceDispatchAdress = default(EntityRef<Adress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="int")]
		public System.Nullable<int> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressId", DbType="int NOT NULL")]
		public int AdressId
		{
			get
			{
				return this._AdressId;
			}
			set
			{
				if ((this._AdressId != value))
				{
					if (this._Adress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdressIdChanging(value);
					this.SendPropertyChanging();
					this._AdressId = value;
					this.SendPropertyChanged("AdressId");
					this.OnAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="decimal(4,2) not null")]
		public decimal VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAdressId", DbType="int not null")]
		public int InvoiceAdressId
		{
			get
			{
				return this._InvoiceAdressId;
			}
			set
			{
				if ((this._InvoiceAdressId != value))
				{
					if (this._InvoiceAdress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceAdressIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAdressId = value;
					this.SendPropertyChanged("InvoiceAdressId");
					this.OnInvoiceAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDispatchAdressId", DbType="int not null")]
		public int InvoiceDispatchAdressId
		{
			get
			{
				return this._InvoiceDispatchAdressId;
			}
			set
			{
				if ((this._InvoiceDispatchAdressId != value))
				{
					if (this._InvoiceDispatchAdress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceDispatchAdressIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDispatchAdressId = value;
					this.SendPropertyChanged("InvoiceDispatchAdressId");
					this.OnInvoiceDispatchAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermOfCredit", DbType="int")]
		public System.Nullable<int> TermOfCredit
		{
			get
			{
				return this._TermOfCredit;
			}
			set
			{
				if ((this._TermOfCredit != value))
				{
					this.OnTermOfCreditChanging(value);
					this.SendPropertyChanging();
					this._TermOfCredit = value;
					this.SendPropertyChanged("TermOfCredit");
					this.OnTermOfCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debitornumber", DbType="varchar(100)")]
		public string Debitornumber
		{
			get
			{
				return this._Debitornumber;
			}
			set
			{
				if ((this._Debitornumber != value))
				{
					this.OnDebitornumberChanging(value);
					this.SendPropertyChanging();
					this._Debitornumber = value;
					this.SendPropertyChanged("Debitornumber");
					this.OnDebitornumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchCode", DbType="varchar(100)")]
		public string MatchCode
		{
			get
			{
				return this._MatchCode;
			}
			set
			{
				if ((this._MatchCode != value))
				{
					this.OnMatchCodeChanging(value);
					this.SendPropertyChanging();
					this._MatchCode = value;
					this.SendPropertyChanged("MatchCode");
					this.OnMatchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eVB_Number", DbType="VarChar(50)")]
		public string eVB_Number
		{
			get
			{
				return this._eVB_Number;
			}
			set
			{
				if ((this._eVB_Number != value))
				{
					this.OneVB_NumberChanging(value);
					this.SendPropertyChanging();
					this._eVB_Number = value;
					this.SendPropertyChanged("eVB_Number");
					this.OneVB_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalId")]
		public System.Nullable<int> InternalId
		{
			get
			{
				return this._InternalId;
			}
			set
			{
				if ((this._InternalId != value))
				{
					this.OnInternalIdChanging(value);
					this.SendPropertyChanging();
					this._InternalId = value;
					this.SendPropertyChanged("InternalId");
					this.OnInternalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SmallCustomer", Storage="_SmallCustomer", ThisKey="Id", OtherKey="CustomerId", IsUnique=true, IsForeignKey=false)]
		public SmallCustomer SmallCustomer
		{
			get
			{
				return this._SmallCustomer.Entity;
			}
			set
			{
				SmallCustomer previousValue = this._SmallCustomer.Entity;
				if (((previousValue != value) 
							|| (this._SmallCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SmallCustomer.Entity = null;
						previousValue.Customer = null;
					}
					this._SmallCustomer.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("SmallCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invoice", Storage="_Invoice", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<Invoice> Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				this._Invoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Order", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_WebServiceLoginCustomer", Storage="_WebServiceLoginCustomer", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<WebServiceLoginCustomer> WebServiceLoginCustomer
		{
			get
			{
				return this._WebServiceLoginCustomer;
			}
			set
			{
				this._WebServiceLoginCustomer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_LargeCustomer", Storage="_LargeCustomer", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public LargeCustomer LargeCustomer
		{
			get
			{
				return this._LargeCustomer.Entity;
			}
			set
			{
				LargeCustomer previousValue = this._LargeCustomer.Entity;
				if (((previousValue != value) 
							|| (this._LargeCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LargeCustomer.Entity = null;
						previousValue.Customer = null;
					}
					this._LargeCustomer.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("LargeCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerProduct", Storage="_CustomerProduct", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<CustomerProduct> CustomerProduct
		{
			get
			{
				return this._CustomerProduct;
			}
			set
			{
				this._CustomerProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Customer", Storage="_Contact", ThisKey="ContactId", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._ContactId = value.Id;
					}
					else
					{
						this._ContactId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Customer", Storage="_Adress", ThisKey="AdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress Adress
		{
			get
			{
				return this._Adress.Entity;
			}
			set
			{
				Adress previousValue = this._Adress.Entity;
				if (((previousValue != value) 
							|| (this._Adress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adress.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._Adress.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._AdressId = value.Id;
					}
					else
					{
						this._AdressId = default(int);
					}
					this.SendPropertyChanged("Adress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Customer1", Storage="_InvoiceAdress", ThisKey="InvoiceAdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress InvoiceAdress
		{
			get
			{
				return this._InvoiceAdress.Entity;
			}
			set
			{
				Adress previousValue = this._InvoiceAdress.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAdress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAdress.Entity = null;
						previousValue.Customer1.Remove(this);
					}
					this._InvoiceAdress.Entity = value;
					if ((value != null))
					{
						value.Customer1.Add(this);
						this._InvoiceAdressId = value.Id;
					}
					else
					{
						this._InvoiceAdressId = default(int);
					}
					this.SendPropertyChanged("InvoiceAdress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Customer2", Storage="_InvoiceDispatchAdress", ThisKey="InvoiceDispatchAdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress InvoiceDispatchAdress
		{
			get
			{
				return this._InvoiceDispatchAdress.Entity;
			}
			set
			{
				Adress previousValue = this._InvoiceDispatchAdress.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceDispatchAdress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceDispatchAdress.Entity = null;
						previousValue.Customer2.Remove(this);
					}
					this._InvoiceDispatchAdress.Entity = value;
					if ((value != null))
					{
						value.Customer2.Add(this);
						this._InvoiceDispatchAdressId = value.Id;
					}
					else
					{
						this._InvoiceDispatchAdressId = default(int);
					}
					this.SendPropertyChanged("InvoiceDispatchAdress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_WebServiceLoginCustomer(WebServiceLoginCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_WebServiceLoginCustomer(WebServiceLoginCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerProduct(CustomerProduct entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerProduct(CustomerProduct entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeregistrationOrder")]
	public partial class DeregistrationOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderNumber;
		
		private int _VehicleId;
		
		private int _RegistrationId;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _ChangeDate;
		
		private EntityRef<Registration> _Registration;
		
		private EntityRef<Vehicle> _Vehicle;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVehicleIdChanging(int value);
    partial void OnVehicleIdChanged();
    partial void OnRegistrationIdChanging(int value);
    partial void OnRegistrationIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public DeregistrationOrder()
		{
			this._Registration = default(EntityRef<Registration>);
			this._Vehicle = default(EntityRef<Vehicle>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="OrderNumber", Storage="_OrderNumber", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleId", DbType="int NOT NULL")]
		public int VehicleId
		{
			get
			{
				return this._VehicleId;
			}
			set
			{
				if ((this._VehicleId != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleIdChanging(value);
					this.SendPropertyChanging();
					this._VehicleId = value;
					this.SendPropertyChanged("VehicleId");
					this.OnVehicleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationId", DbType="int NOT NULL")]
		public int RegistrationId
		{
			get
			{
				return this._RegistrationId;
			}
			set
			{
				if ((this._RegistrationId != value))
				{
					if (this._Registration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationId = value;
					this.SendPropertyChanged("RegistrationId");
					this.OnRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Registration_DeregistrationOrder", Storage="_Registration", ThisKey="RegistrationId", OtherKey="Id", IsForeignKey=true)]
		public Registration Registration
		{
			get
			{
				return this._Registration.Entity;
			}
			set
			{
				Registration previousValue = this._Registration.Entity;
				if (((previousValue != value) 
							|| (this._Registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Registration.Entity = null;
						previousValue.DeregistrationOrder.Remove(this);
					}
					this._Registration.Entity = value;
					if ((value != null))
					{
						value.DeregistrationOrder.Add(this);
						this._RegistrationId = value.Id;
					}
					else
					{
						this._RegistrationId = default(int);
					}
					this.SendPropertyChanged("Registration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_DeregistrationOrder", Storage="_Vehicle", ThisKey="VehicleId", OtherKey="Id", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.DeregistrationOrder.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.DeregistrationOrder.Add(this);
						this._VehicleId = value.Id;
					}
					else
					{
						this._VehicleId = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_DeregistrationOrder", Storage="_Order", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.DeregistrationOrder = null;
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.DeregistrationOrder = this;
						this._OrderNumber = value.Id;
					}
					else
					{
						this._OrderNumber = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _ContactId;
		
		private int _AdressId;
		
		private System.Nullable<int> _SuperLocationId;
		
		private System.Nullable<decimal> _VAT;
		
		private System.Nullable<int> _InvoiceAdressId;
		
		private System.Nullable<int> _InvoiceDispatchAdressId;
		
		private string _Name;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<Mailinglist> _Mailinglist;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<Price> _Price;
		
		private EntitySet<LargeCustomer> _LargeCustomer1;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Adress> _Adress;
		
		private EntityRef<Adress> _InvoiceAdress;
		
		private EntityRef<Adress> _InvoiceDispatchAdress;
		
		private EntityRef<LargeCustomer> _LargeCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnContactIdChanging(System.Nullable<int> value);
    partial void OnContactIdChanged();
    partial void OnAdressIdChanging(int value);
    partial void OnAdressIdChanged();
    partial void OnSuperLocationIdChanging(System.Nullable<int> value);
    partial void OnSuperLocationIdChanged();
    partial void OnVATChanging(System.Nullable<decimal> value);
    partial void OnVATChanged();
    partial void OnInvoiceAdressIdChanging(System.Nullable<int> value);
    partial void OnInvoiceAdressIdChanged();
    partial void OnInvoiceDispatchAdressIdChanging(System.Nullable<int> value);
    partial void OnInvoiceDispatchAdressIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public Location()
		{
			this._Mailinglist = new EntitySet<Mailinglist>(new Action<Mailinglist>(this.attach_Mailinglist), new Action<Mailinglist>(this.detach_Mailinglist));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Price = new EntitySet<Price>(new Action<Price>(this.attach_Price), new Action<Price>(this.detach_Price));
			this._LargeCustomer1 = new EntitySet<LargeCustomer>(new Action<LargeCustomer>(this.attach_LargeCustomer1), new Action<LargeCustomer>(this.detach_LargeCustomer1));
			this._Contact = default(EntityRef<Contact>);
			this._Adress = default(EntityRef<Adress>);
			this._InvoiceAdress = default(EntityRef<Adress>);
			this._InvoiceDispatchAdress = default(EntityRef<Adress>);
			this._LargeCustomer = default(EntityRef<LargeCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int NOT NULL")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._LargeCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="int")]
		public System.Nullable<int> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdressId", DbType="int NOT NULL")]
		public int AdressId
		{
			get
			{
				return this._AdressId;
			}
			set
			{
				if ((this._AdressId != value))
				{
					if (this._Adress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdressIdChanging(value);
					this.SendPropertyChanging();
					this._AdressId = value;
					this.SendPropertyChanged("AdressId");
					this.OnAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperLocationId", DbType="int")]
		public System.Nullable<int> SuperLocationId
		{
			get
			{
				return this._SuperLocationId;
			}
			set
			{
				if ((this._SuperLocationId != value))
				{
					this.OnSuperLocationIdChanging(value);
					this.SendPropertyChanging();
					this._SuperLocationId = value;
					this.SendPropertyChanged("SuperLocationId");
					this.OnSuperLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAdressId", DbType="int")]
		public System.Nullable<int> InvoiceAdressId
		{
			get
			{
				return this._InvoiceAdressId;
			}
			set
			{
				if ((this._InvoiceAdressId != value))
				{
					if (this._InvoiceAdress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceAdressIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAdressId = value;
					this.SendPropertyChanged("InvoiceAdressId");
					this.OnInvoiceAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDispatchAdressId", DbType="int")]
		public System.Nullable<int> InvoiceDispatchAdressId
		{
			get
			{
				return this._InvoiceDispatchAdressId;
			}
			set
			{
				if ((this._InvoiceDispatchAdressId != value))
				{
					if (this._InvoiceDispatchAdress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceDispatchAdressIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDispatchAdressId = value;
					this.SendPropertyChanged("InvoiceDispatchAdressId");
					this.OnInvoiceDispatchAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Mailinglist", Storage="_Mailinglist", ThisKey="Id", OtherKey="LocationId")]
		public EntitySet<Mailinglist> Mailinglist
		{
			get
			{
				return this._Mailinglist;
			}
			set
			{
				this._Mailinglist.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Order", Storage="_Order", ThisKey="Id", OtherKey="LocationId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Price", Storage="_Price", ThisKey="Id", OtherKey="LocationId")]
		public EntitySet<Price> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				this._Price.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_LargeCustomer", Storage="_LargeCustomer1", ThisKey="Id", OtherKey="MainLocationId")]
		public EntitySet<LargeCustomer> LargeCustomer1
		{
			get
			{
				return this._LargeCustomer1;
			}
			set
			{
				this._LargeCustomer1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Location", Storage="_Contact", ThisKey="ContactId", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._ContactId = value.Id;
					}
					else
					{
						this._ContactId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Location", Storage="_Adress", ThisKey="AdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress Adress
		{
			get
			{
				return this._Adress.Entity;
			}
			set
			{
				Adress previousValue = this._Adress.Entity;
				if (((previousValue != value) 
							|| (this._Adress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adress.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._Adress.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._AdressId = value.Id;
					}
					else
					{
						this._AdressId = default(int);
					}
					this.SendPropertyChanged("Adress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Location1", Storage="_InvoiceAdress", ThisKey="InvoiceAdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress InvoiceAdress
		{
			get
			{
				return this._InvoiceAdress.Entity;
			}
			set
			{
				Adress previousValue = this._InvoiceAdress.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAdress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAdress.Entity = null;
						previousValue.Location1.Remove(this);
					}
					this._InvoiceAdress.Entity = value;
					if ((value != null))
					{
						value.Location1.Add(this);
						this._InvoiceAdressId = value.Id;
					}
					else
					{
						this._InvoiceAdressId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceAdress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Location2", Storage="_InvoiceDispatchAdress", ThisKey="InvoiceDispatchAdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress InvoiceDispatchAdress
		{
			get
			{
				return this._InvoiceDispatchAdress.Entity;
			}
			set
			{
				Adress previousValue = this._InvoiceDispatchAdress.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceDispatchAdress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceDispatchAdress.Entity = null;
						previousValue.Location2.Remove(this);
					}
					this._InvoiceDispatchAdress.Entity = value;
					if ((value != null))
					{
						value.Location2.Add(this);
						this._InvoiceDispatchAdressId = value.Id;
					}
					else
					{
						this._InvoiceDispatchAdressId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceDispatchAdress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LargeCustomer_Location", Storage="_LargeCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public LargeCustomer LargeCustomer
		{
			get
			{
				return this._LargeCustomer.Entity;
			}
			set
			{
				LargeCustomer previousValue = this._LargeCustomer.Entity;
				if (((previousValue != value) 
							|| (this._LargeCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LargeCustomer.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._LargeCustomer.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("LargeCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mailinglist(Mailinglist entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Mailinglist(Mailinglist entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Price(Price entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Price(Price entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_LargeCustomer1(LargeCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Location1 = this;
		}
		
		private void detach_LargeCustomer1(LargeCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Location1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogType")]
	public partial class LogType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Systemlog> _Log;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public LogType()
		{
			this._Log = new EntitySet<Systemlog>(new Action<Systemlog>(this.attach_Log), new Action<Systemlog>(this.detach_Log));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_Systemlog", Storage="_Log", ThisKey="Id", OtherKey="LogTypeId")]
		public EntitySet<Systemlog> Systemlog
		{
			get
			{
				return this._Log;
			}
			set
			{
				this._Log.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Log(Systemlog entity)
		{
			this.SendPropertyChanging();
			entity.LogType = this;
		}
		
		private void detach_Log(Systemlog entity)
		{
			this.SendPropertyChanging();
			entity.LogType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderInvoice")]
	public partial class OrderInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderNumber;
		
		private int _InvoiceId;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderNumberChanging(int value);
    partial void OnOrderNumberChanged();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    #endregion
		
		public OrderInvoice()
		{
			this._Invoice = default(EntityRef<Invoice>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_OrderInvoice", Storage="_Invoice", ThisKey="InvoiceId", OtherKey="Id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.OrderInvoice.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.OrderInvoice.Add(this);
						this._InvoiceId = value.Id;
					}
					else
					{
						this._InvoiceId = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderInvoice", Storage="_Order", ThisKey="OrderNumber", OtherKey="Id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderInvoice.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderInvoice.Add(this);
						this._OrderNumber = value.Id;
					}
					else
					{
						this._OrderNumber = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItemStatus")]
	public partial class OrderItemStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<OrderItem> _OrderItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public OrderItemStatus()
		{
			this._OrderItem = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItem), new Action<OrderItem>(this.detach_OrderItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItemStatus_OrderItem", Storage="_OrderItem", ThisKey="Id", OtherKey="Status")]
		public EntitySet<OrderItem> OrderItem
		{
			get
			{
				return this._OrderItem;
			}
			set
			{
				this._OrderItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.OrderItemStatus = this;
		}
		
		private void detach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.OrderItemStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderType")]
	public partial class OrderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<RequiredField> _RequiredField;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public OrderType()
		{
			this._RequiredField = new EntitySet<RequiredField>(new Action<RequiredField>(this.attach_RequiredField), new Action<RequiredField>(this.detach_RequiredField));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(10)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_RequiredField", Storage="_RequiredField", ThisKey="Id", OtherKey="OrderTypeId")]
		public EntitySet<RequiredField> RequiredField
		{
			get
			{
				return this._RequiredField;
			}
			set
			{
				this._RequiredField.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_Order", Storage="_Order", ThisKey="Id", OtherKey="OrderTypeId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_Product", Storage="_Product", ThisKey="Id", OtherKey="OrderTypeId")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequiredField(RequiredField entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = this;
		}
		
		private void detach_RequiredField(RequiredField entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = null;
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permission")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<PermissionProfilePermission> _PermissionProfilePermission;
		
		private EntitySet<UserPermission> _UserPermission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Permission()
		{
			this._PermissionProfilePermission = new EntitySet<PermissionProfilePermission>(new Action<PermissionProfilePermission>(this.attach_PermissionProfilePermission), new Action<PermissionProfilePermission>(this.detach_PermissionProfilePermission));
			this._UserPermission = new EntitySet<UserPermission>(new Action<UserPermission>(this.attach_UserPermission), new Action<UserPermission>(this.detach_UserPermission));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_PermissionProfilePermission", Storage="_PermissionProfilePermission", ThisKey="Id", OtherKey="PermissionId")]
		public EntitySet<PermissionProfilePermission> PermissionProfilePermission
		{
			get
			{
				return this._PermissionProfilePermission;
			}
			set
			{
				this._PermissionProfilePermission.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_UserPermission", Storage="_UserPermission", ThisKey="Id", OtherKey="PermissionId")]
		public EntitySet<UserPermission> UserPermission
		{
			get
			{
				return this._UserPermission;
			}
			set
			{
				this._UserPermission.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PermissionProfilePermission(PermissionProfilePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_PermissionProfilePermission(PermissionProfilePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
		
		private void attach_UserPermission(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_UserPermission(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PermissionProfile")]
	public partial class PermissionProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<PermissionProfilePermission> _PermissionProfilePermission;
		
		private EntitySet<UserPermissionProfile> _UserPermissionProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PermissionProfile()
		{
			this._PermissionProfilePermission = new EntitySet<PermissionProfilePermission>(new Action<PermissionProfilePermission>(this.attach_PermissionProfilePermission), new Action<PermissionProfilePermission>(this.detach_PermissionProfilePermission));
			this._UserPermissionProfile = new EntitySet<UserPermissionProfile>(new Action<UserPermissionProfile>(this.attach_UserPermissionProfile), new Action<UserPermissionProfile>(this.detach_UserPermissionProfile));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionProfile_PermissionProfilePermission", Storage="_PermissionProfilePermission", ThisKey="Id", OtherKey="PermissionProfileId")]
		public EntitySet<PermissionProfilePermission> PermissionProfilePermission
		{
			get
			{
				return this._PermissionProfilePermission;
			}
			set
			{
				this._PermissionProfilePermission.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionProfile_UserPermissionProfile", Storage="_UserPermissionProfile", ThisKey="Id", OtherKey="PermissionProfileId")]
		public EntitySet<UserPermissionProfile> UserPermissionProfile
		{
			get
			{
				return this._UserPermissionProfile;
			}
			set
			{
				this._UserPermissionProfile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PermissionProfilePermission(PermissionProfilePermission entity)
		{
			this.SendPropertyChanging();
			entity.PermissionProfile = this;
		}
		
		private void detach_PermissionProfilePermission(PermissionProfilePermission entity)
		{
			this.SendPropertyChanging();
			entity.PermissionProfile = null;
		}
		
		private void attach_UserPermissionProfile(UserPermissionProfile entity)
		{
			this.SendPropertyChanging();
			entity.PermissionProfile = this;
		}
		
		private void detach_UserPermissionProfile(UserPermissionProfile entity)
		{
			this.SendPropertyChanging();
			entity.PermissionProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PermissionProfilePermission")]
	public partial class PermissionProfilePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PermissionProfileId;
		
		private int _PermissionId;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<PermissionProfile> _PermissionProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPermissionProfileIdChanging(int value);
    partial void OnPermissionProfileIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    #endregion
		
		public PermissionProfilePermission()
		{
			this._Permission = default(EntityRef<Permission>);
			this._PermissionProfile = default(EntityRef<PermissionProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionProfileId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int PermissionProfileId
		{
			get
			{
				return this._PermissionProfileId;
			}
			set
			{
				if ((this._PermissionProfileId != value))
				{
					if (this._PermissionProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionProfileIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionProfileId = value;
					this.SendPropertyChanged("PermissionProfileId");
					this.OnPermissionProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_PermissionProfilePermission", Storage="_Permission", ThisKey="PermissionId", OtherKey="Id", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.PermissionProfilePermission.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.PermissionProfilePermission.Add(this);
						this._PermissionId = value.Id;
					}
					else
					{
						this._PermissionId = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionProfile_PermissionProfilePermission", Storage="_PermissionProfile", ThisKey="PermissionProfileId", OtherKey="Id", IsForeignKey=true)]
		public PermissionProfile PermissionProfile
		{
			get
			{
				return this._PermissionProfile.Entity;
			}
			set
			{
				PermissionProfile previousValue = this._PermissionProfile.Entity;
				if (((previousValue != value) 
							|| (this._PermissionProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PermissionProfile.Entity = null;
						previousValue.PermissionProfilePermission.Remove(this);
					}
					this._PermissionProfile.Entity = value;
					if ((value != null))
					{
						value.PermissionProfilePermission.Add(this);
						this._PermissionProfileId = value.Id;
					}
					else
					{
						this._PermissionProfileId = default(int);
					}
					this.SendPropertyChanged("PermissionProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmallCustomer")]
	public partial class SmallCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private int _PersonId;
		
		private System.Nullable<int> _BankAccountId;
		
		private EntityRef<BankAccount> _BankAccount;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnBankAccountIdChanging(System.Nullable<int> value);
    partial void OnBankAccountIdChanged();
    #endregion
		
		public SmallCustomer()
		{
			this._BankAccount = default(EntityRef<BankAccount>);
			this._Customer = default(EntityRef<Customer>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="int NOT NULL")]
		public int PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="int")]
		public System.Nullable<int> BankAccountId
		{
			get
			{
				return this._BankAccountId;
			}
			set
			{
				if ((this._BankAccountId != value))
				{
					if (this._BankAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankAccountIdChanging(value);
					this.SendPropertyChanging();
					this._BankAccountId = value;
					this.SendPropertyChanged("BankAccountId");
					this.OnBankAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankAccount_SmallCustomer", Storage="_BankAccount", ThisKey="BankAccountId", OtherKey="Id", IsForeignKey=true)]
		public BankAccount BankAccount
		{
			get
			{
				return this._BankAccount.Entity;
			}
			set
			{
				BankAccount previousValue = this._BankAccount.Entity;
				if (((previousValue != value) 
							|| (this._BankAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankAccount.Entity = null;
						previousValue.SmallCustomer.Remove(this);
					}
					this._BankAccount.Entity = value;
					if ((value != null))
					{
						value.SmallCustomer.Add(this);
						this._BankAccountId = value.Id;
					}
					else
					{
						this._BankAccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SmallCustomer", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.SmallCustomer = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.SmallCustomer = this;
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_SmallCustomer", Storage="_Person", ThisKey="PersonId", OtherKey="Id", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.SmallCustomer.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.SmallCustomer.Add(this);
						this._PersonId = value.Id;
					}
					else
					{
						this._PersonId = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPermission")]
	public partial class UserPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _PermissionId;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPermissionIdChanging(int value);
    partial void OnPermissionIdChanged();
    #endregion
		
		public UserPermission()
		{
			this._Permission = default(EntityRef<Permission>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_UserPermission", Storage="_Permission", ThisKey="PermissionId", OtherKey="Id", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.UserPermission.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.UserPermission.Add(this);
						this._PermissionId = value.Id;
					}
					else
					{
						this._PermissionId = default(int);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPermission.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPermission.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPermissionProfile")]
	public partial class UserPermissionProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _PermissionProfileId;
		
		private EntityRef<PermissionProfile> _PermissionProfile;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPermissionProfileIdChanging(int value);
    partial void OnPermissionProfileIdChanged();
    #endregion
		
		public UserPermissionProfile()
		{
			this._PermissionProfile = default(EntityRef<PermissionProfile>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionProfileId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int PermissionProfileId
		{
			get
			{
				return this._PermissionProfileId;
			}
			set
			{
				if ((this._PermissionProfileId != value))
				{
					if (this._PermissionProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionProfileIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionProfileId = value;
					this.SendPropertyChanged("PermissionProfileId");
					this.OnPermissionProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PermissionProfile_UserPermissionProfile", Storage="_PermissionProfile", ThisKey="PermissionProfileId", OtherKey="Id", IsForeignKey=true)]
		public PermissionProfile PermissionProfile
		{
			get
			{
				return this._PermissionProfile.Entity;
			}
			set
			{
				PermissionProfile previousValue = this._PermissionProfile.Entity;
				if (((previousValue != value) 
							|| (this._PermissionProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PermissionProfile.Entity = null;
						previousValue.UserPermissionProfile.Remove(this);
					}
					this._PermissionProfile.Entity = value;
					if ((value != null))
					{
						value.UserPermissionProfile.Add(this);
						this._PermissionProfileId = value.Id;
					}
					else
					{
						this._PermissionProfileId = default(int);
					}
					this.SendPropertyChanged("PermissionProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermissionProfile", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPermissionProfile.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPermissionProfile.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Systemlog]")]
	public partial class Systemlog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _Date;
		
		private int _LogUserId;
		
		private string _TableName;
		
		private string _TableProperty;
		
		private System.Nullable<int> _ReferenceId;
		
		private System.Nullable<int> _ChildReferenceId;
		
		private string _Text;
		
		private string _Exception;
		
		private int _LogTypeId;
		
		private EntityRef<LogType> _LogType;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnLogUserIdChanging(int value);
    partial void OnLogUserIdChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnTablePropertyChanging(string value);
    partial void OnTablePropertyChanged();
    partial void OnReferenceIdChanging(System.Nullable<int> value);
    partial void OnReferenceIdChanged();
    partial void OnChildReferenceIdChanging(System.Nullable<int> value);
    partial void OnChildReferenceIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnExceptionChanging(string value);
    partial void OnExceptionChanged();
    partial void OnLogTypeIdChanging(int value);
    partial void OnLogTypeIdChanged();
    #endregion
		
		public Systemlog()
		{
			this._LogType = default(EntityRef<LogType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUserId", DbType="int NOT NULL")]
		public int LogUserId
		{
			get
			{
				return this._LogUserId;
			}
			set
			{
				if ((this._LogUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogUserIdChanging(value);
					this.SendPropertyChanging();
					this._LogUserId = value;
					this.SendPropertyChanged("LogUserId");
					this.OnLogUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableProperty", DbType="VarChar(50)")]
		public string TableProperty
		{
			get
			{
				return this._TableProperty;
			}
			set
			{
				if ((this._TableProperty != value))
				{
					this.OnTablePropertyChanging(value);
					this.SendPropertyChanging();
					this._TableProperty = value;
					this.SendPropertyChanged("TableProperty");
					this.OnTablePropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceId", DbType="int")]
		public System.Nullable<int> ReferenceId
		{
			get
			{
				return this._ReferenceId;
			}
			set
			{
				if ((this._ReferenceId != value))
				{
					this.OnReferenceIdChanging(value);
					this.SendPropertyChanging();
					this._ReferenceId = value;
					this.SendPropertyChanged("ReferenceId");
					this.OnReferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildReferenceId", DbType="int")]
		public System.Nullable<int> ChildReferenceId
		{
			get
			{
				return this._ChildReferenceId;
			}
			set
			{
				if ((this._ChildReferenceId != value))
				{
					this.OnChildReferenceIdChanging(value);
					this.SendPropertyChanging();
					this._ChildReferenceId = value;
					this.SendPropertyChanged("ChildReferenceId");
					this.OnChildReferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="VarChar(MAX)")]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this.OnExceptionChanging(value);
					this.SendPropertyChanging();
					this._Exception = value;
					this.SendPropertyChanged("Exception");
					this.OnExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeId", DbType="Int NOT NULL")]
		public int LogTypeId
		{
			get
			{
				return this._LogTypeId;
			}
			set
			{
				if ((this._LogTypeId != value))
				{
					if (this._LogType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LogTypeId = value;
					this.SendPropertyChanged("LogTypeId");
					this.OnLogTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogType_Systemlog", Storage="_LogType", ThisKey="LogTypeId", OtherKey="Id", IsForeignKey=true)]
		public LogType LogType
		{
			get
			{
				return this._LogType.Entity;
			}
			set
			{
				LogType previousValue = this._LogType.Entity;
				if (((previousValue != value) 
							|| (this._LogType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogType.Entity = null;
						previousValue.Systemlog.Remove(this);
					}
					this._LogType.Entity = value;
					if ((value != null))
					{
						value.Systemlog.Add(this);
						this._LogTypeId = value.Id;
					}
					else
					{
						this._LogTypeId = default(int);
					}
					this.SendPropertyChanged("LogType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Systemlog", Storage="_User", ThisKey="LogUserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Systemlog.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Systemlog.Add(this);
						this._LogUserId = value.Id;
					}
					else
					{
						this._LogUserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adress")]
	public partial class Adress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Street;
		
		private string _StreetNumber;
		
		private string _Zipcode;
		
		private string _City;
		
		private string _Country;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<CarOwner> _CarOwner;
		
		private EntitySet<Customer> _Customer;
		
		private EntitySet<Customer> _Customer1;
		
		private EntitySet<Customer> _Customer2;
		
		private EntitySet<Location> _Location;
		
		private EntitySet<Location> _Location1;
		
		private EntitySet<Location> _Location2;
		
		private EntitySet<Invoice> _Invoice;
		
		private EntitySet<PackingList> _PackingList;
		
		private EntitySet<RegistrationLocation> _RegistrationLocation;
		
		private EntitySet<DocketList> _DocketList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnStreetNumberChanging(string value);
    partial void OnStreetNumberChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public Adress()
		{
			this._CarOwner = new EntitySet<CarOwner>(new Action<CarOwner>(this.attach_CarOwner), new Action<CarOwner>(this.detach_CarOwner));
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			this._Customer1 = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer1), new Action<Customer>(this.detach_Customer1));
			this._Customer2 = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer2), new Action<Customer>(this.detach_Customer2));
			this._Location = new EntitySet<Location>(new Action<Location>(this.attach_Location), new Action<Location>(this.detach_Location));
			this._Location1 = new EntitySet<Location>(new Action<Location>(this.attach_Location1), new Action<Location>(this.detach_Location1));
			this._Location2 = new EntitySet<Location>(new Action<Location>(this.attach_Location2), new Action<Location>(this.detach_Location2));
			this._Invoice = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice), new Action<Invoice>(this.detach_Invoice));
			this._PackingList = new EntitySet<PackingList>(new Action<PackingList>(this.attach_PackingList), new Action<PackingList>(this.detach_PackingList));
			this._RegistrationLocation = new EntitySet<RegistrationLocation>(new Action<RegistrationLocation>(this.attach_RegistrationLocation), new Action<RegistrationLocation>(this.detach_RegistrationLocation));
			this._DocketList = new EntitySet<DocketList>(new Action<DocketList>(this.attach_DocketList), new Action<DocketList>(this.detach_DocketList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetNumber", DbType="VarChar(10)")]
		public string StreetNumber
		{
			get
			{
				return this._StreetNumber;
			}
			set
			{
				if ((this._StreetNumber != value))
				{
					this.OnStreetNumberChanging(value);
					this.SendPropertyChanging();
					this._StreetNumber = value;
					this.SendPropertyChanged("StreetNumber");
					this.OnStreetNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_CarOwner", Storage="_CarOwner", ThisKey="Id", OtherKey="AdressId")]
		public EntitySet<CarOwner> CarOwner
		{
			get
			{
				return this._CarOwner;
			}
			set
			{
				this._CarOwner.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Customer", Storage="_Customer", ThisKey="Id", OtherKey="AdressId")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Customer1", Storage="_Customer1", ThisKey="Id", OtherKey="InvoiceAdressId")]
		public EntitySet<Customer> Customer1
		{
			get
			{
				return this._Customer1;
			}
			set
			{
				this._Customer1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Customer2", Storage="_Customer2", ThisKey="Id", OtherKey="InvoiceDispatchAdressId")]
		public EntitySet<Customer> Customer2
		{
			get
			{
				return this._Customer2;
			}
			set
			{
				this._Customer2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Location", Storage="_Location", ThisKey="Id", OtherKey="AdressId")]
		public EntitySet<Location> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Location1", Storage="_Location1", ThisKey="Id", OtherKey="InvoiceAdressId")]
		public EntitySet<Location> Location1
		{
			get
			{
				return this._Location1;
			}
			set
			{
				this._Location1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Location2", Storage="_Location2", ThisKey="Id", OtherKey="InvoiceDispatchAdressId")]
		public EntitySet<Location> Location2
		{
			get
			{
				return this._Location2;
			}
			set
			{
				this._Location2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Invoice", Storage="_Invoice", ThisKey="Id", OtherKey="InvoiceRecipientAdressId")]
		public EntitySet<Invoice> Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				this._Invoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_PackingList", Storage="_PackingList", ThisKey="Id", OtherKey="RecipientAdressId")]
		public EntitySet<PackingList> PackingList
		{
			get
			{
				return this._PackingList;
			}
			set
			{
				this._PackingList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_RegistrationLocation", Storage="_RegistrationLocation", ThisKey="Id", OtherKey="RegistrationLocationAdressId")]
		public EntitySet<RegistrationLocation> RegistrationLocation
		{
			get
			{
				return this._RegistrationLocation;
			}
			set
			{
				this._RegistrationLocation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_DocketList", Storage="_DocketList", ThisKey="Id", OtherKey="RecipientAdressId")]
		public EntitySet<DocketList> DocketList
		{
			get
			{
				return this._DocketList;
			}
			set
			{
				this._DocketList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarOwner(CarOwner entity)
		{
			this.SendPropertyChanging();
			entity.Adress = this;
		}
		
		private void detach_CarOwner(CarOwner entity)
		{
			this.SendPropertyChanging();
			entity.Adress = null;
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Adress = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Adress = null;
		}
		
		private void attach_Customer1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAdress = this;
		}
		
		private void detach_Customer1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAdress = null;
		}
		
		private void attach_Customer2(Customer entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceDispatchAdress = this;
		}
		
		private void detach_Customer2(Customer entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceDispatchAdress = null;
		}
		
		private void attach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.Adress = this;
		}
		
		private void detach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.Adress = null;
		}
		
		private void attach_Location1(Location entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAdress = this;
		}
		
		private void detach_Location1(Location entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAdress = null;
		}
		
		private void attach_Location2(Location entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceDispatchAdress = this;
		}
		
		private void detach_Location2(Location entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceDispatchAdress = null;
		}
		
		private void attach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Adress = this;
		}
		
		private void detach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Adress = null;
		}
		
		private void attach_PackingList(PackingList entity)
		{
			this.SendPropertyChanging();
			entity.Adress = this;
		}
		
		private void detach_PackingList(PackingList entity)
		{
			this.SendPropertyChanging();
			entity.Adress = null;
		}
		
		private void attach_RegistrationLocation(RegistrationLocation entity)
		{
			this.SendPropertyChanging();
			entity.Adress = this;
		}
		
		private void detach_RegistrationLocation(RegistrationLocation entity)
		{
			this.SendPropertyChanging();
			entity.Adress = null;
		}
		
		private void attach_DocketList(DocketList entity)
		{
			this.SendPropertyChanging();
			entity.Adress = this;
		}
		
		private void detach_DocketList(DocketList entity)
		{
			this.SendPropertyChanging();
			entity.Adress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderStatus")]
	public partial class OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public OrderStatus()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_Order", ThisKey="Id", OtherKey="Status")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PersonId;
		
		private System.Nullable<int> _ContactId;
		
		private string _Login;
		
		private string _Password;
		
		private string _Salt;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private bool _IsLocked;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<UserPermission> _UserPermission;
		
		private EntitySet<UserPermissionProfile> _UserPermissionProfile;
		
		private EntitySet<Systemlog> _Log;
		
		private EntitySet<Invoice> _Invoice;
		
		private EntitySet<Order> _Order;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnContactIdChanging(System.Nullable<int> value);
    partial void OnContactIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public User()
		{
			this._UserPermission = new EntitySet<UserPermission>(new Action<UserPermission>(this.attach_UserPermission), new Action<UserPermission>(this.detach_UserPermission));
			this._UserPermissionProfile = new EntitySet<UserPermissionProfile>(new Action<UserPermissionProfile>(this.attach_UserPermissionProfile), new Action<UserPermissionProfile>(this.detach_UserPermissionProfile));
			this._Log = new EntitySet<Systemlog>(new Action<Systemlog>(this.attach_Log), new Action<Systemlog>(this.detach_Log));
			this._Invoice = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice), new Action<Invoice>(this.detach_Invoice));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Contact = default(EntityRef<Contact>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="int NOT NULL")]
		public int PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="int")]
		public System.Nullable<int> ContactId
		{
			get
			{
				return this._ContactId;
			}
			set
			{
				if ((this._ContactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIdChanging(value);
					this.SendPropertyChanging();
					this._ContactId = value;
					this.SendPropertyChanged("ContactId");
					this.OnContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="bit not null")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermission", Storage="_UserPermission", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserPermission> UserPermission
		{
			get
			{
				return this._UserPermission;
			}
			set
			{
				this._UserPermission.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPermissionProfile", Storage="_UserPermissionProfile", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<UserPermissionProfile> UserPermissionProfile
		{
			get
			{
				return this._UserPermissionProfile;
			}
			set
			{
				this._UserPermissionProfile.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Systemlog", Storage="_Log", ThisKey="Id", OtherKey="LogUserId")]
		public EntitySet<Systemlog> Systemlog
		{
			get
			{
				return this._Log;
			}
			set
			{
				this._Log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_Invoice", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Invoice> Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				this._Invoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Order", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_User", Storage="_Contact", ThisKey="ContactId", OtherKey="Id", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.User.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._ContactId = value.Id;
					}
					else
					{
						this._ContactId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_User", Storage="_Person", ThisKey="PersonId", OtherKey="Id", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.User.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._PersonId = value.Id;
					}
					else
					{
						this._PersonId = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserPermission(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPermission(UserPermission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserPermissionProfile(UserPermissionProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPermissionProfile(UserPermissionProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Log(Systemlog entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Log(Systemlog entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItem")]
	public partial class OrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OrderNumber;
		
		private int _ProductId;
		
		private string _ProductName;
		
		private decimal _Amount;
		
		private int _Count;
		
		private int _Status;
		
		private System.Nullable<int> _CostCenterId;
		
		private System.Nullable<int> _SuperOrderItemId;
		
		private bool _IsAuthorativeCharge;
		
		private bool _NeedsVAT;
		
		private EntitySet<InvoiceItem> _InvoiceItem;
		
		private EntityRef<CostCenter> _CostCenter;
		
		private EntityRef<OrderItemStatus> _OrderItemStatus;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderNumberChanging(int value);
    partial void OnOrderNumberChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCostCenterIdChanging(System.Nullable<int> value);
    partial void OnCostCenterIdChanged();
    partial void OnSuperOrderItemIdChanging(System.Nullable<int> value);
    partial void OnSuperOrderItemIdChanged();
    partial void OnIsAuthorativeChargeChanging(bool value);
    partial void OnIsAuthorativeChargeChanged();
    partial void OnNeedsVATChanging(bool value);
    partial void OnNeedsVATChanged();
    #endregion
		
		public OrderItem()
		{
			this._InvoiceItem = new EntitySet<InvoiceItem>(new Action<InvoiceItem>(this.attach_InvoiceItem), new Action<InvoiceItem>(this.detach_InvoiceItem));
			this._CostCenter = default(EntityRef<CostCenter>);
			this._OrderItemStatus = default(EntityRef<OrderItemStatus>);
			this._Order = default(EntityRef<Order>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="int NOT NULL")]
		public int OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._OrderItemStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenterId", DbType="int")]
		public System.Nullable<int> CostCenterId
		{
			get
			{
				return this._CostCenterId;
			}
			set
			{
				if ((this._CostCenterId != value))
				{
					if (this._CostCenter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostCenterIdChanging(value);
					this.SendPropertyChanging();
					this._CostCenterId = value;
					this.SendPropertyChanged("CostCenterId");
					this.OnCostCenterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperOrderItemId", DbType="int")]
		public System.Nullable<int> SuperOrderItemId
		{
			get
			{
				return this._SuperOrderItemId;
			}
			set
			{
				if ((this._SuperOrderItemId != value))
				{
					this.OnSuperOrderItemIdChanging(value);
					this.SendPropertyChanging();
					this._SuperOrderItemId = value;
					this.SendPropertyChanged("SuperOrderItemId");
					this.OnSuperOrderItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuthorativeCharge", DbType="Bit NOT NULL")]
		public bool IsAuthorativeCharge
		{
			get
			{
				return this._IsAuthorativeCharge;
			}
			set
			{
				if ((this._IsAuthorativeCharge != value))
				{
					this.OnIsAuthorativeChargeChanging(value);
					this.SendPropertyChanging();
					this._IsAuthorativeCharge = value;
					this.SendPropertyChanged("IsAuthorativeCharge");
					this.OnIsAuthorativeChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsVAT", DbType="bit not null")]
		public bool NeedsVAT
		{
			get
			{
				return this._NeedsVAT;
			}
			set
			{
				if ((this._NeedsVAT != value))
				{
					this.OnNeedsVATChanging(value);
					this.SendPropertyChanging();
					this._NeedsVAT = value;
					this.SendPropertyChanged("NeedsVAT");
					this.OnNeedsVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItem_InvoiceItem", Storage="_InvoiceItem", ThisKey="Id", OtherKey="OrderItemId")]
		public EntitySet<InvoiceItem> InvoiceItem
		{
			get
			{
				return this._InvoiceItem;
			}
			set
			{
				this._InvoiceItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostCenter_OrderItem", Storage="_CostCenter", ThisKey="CostCenterId", OtherKey="Id", IsForeignKey=true)]
		public CostCenter CostCenter
		{
			get
			{
				return this._CostCenter.Entity;
			}
			set
			{
				CostCenter previousValue = this._CostCenter.Entity;
				if (((previousValue != value) 
							|| (this._CostCenter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostCenter.Entity = null;
						previousValue.OrderItem.Remove(this);
					}
					this._CostCenter.Entity = value;
					if ((value != null))
					{
						value.OrderItem.Add(this);
						this._CostCenterId = value.Id;
					}
					else
					{
						this._CostCenterId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CostCenter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItemStatus_OrderItem", Storage="_OrderItemStatus", ThisKey="Status", OtherKey="Id", IsForeignKey=true)]
		public OrderItemStatus OrderItemStatus
		{
			get
			{
				return this._OrderItemStatus.Entity;
			}
			set
			{
				OrderItemStatus previousValue = this._OrderItemStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderItemStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderItemStatus.Entity = null;
						previousValue.OrderItem.Remove(this);
					}
					this._OrderItemStatus.Entity = value;
					if ((value != null))
					{
						value.OrderItem.Add(this);
						this._Status = value.Id;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("OrderItemStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_Order", ThisKey="OrderNumber", OtherKey="Id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderItem.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderItem.Add(this);
						this._OrderNumber = value.Id;
					}
					else
					{
						this._OrderNumber = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderItem", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OrderItem.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OrderItem.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceItem(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.OrderItem = this;
		}
		
		private void detach_InvoiceItem(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.OrderItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegistrationOrderType")]
	public partial class RegistrationOrderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.DateTime _ChangeDate;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<RegistrationOrder> _RegistrationOrder;
		
		private EntitySet<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public RegistrationOrderType()
		{
			this._RegistrationOrder = new EntitySet<RegistrationOrder>(new Action<RegistrationOrder>(this.attach_RegistrationOrder), new Action<RegistrationOrder>(this.detach_RegistrationOrder));
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationOrderType_RegistrationOrder", Storage="_RegistrationOrder", ThisKey="Id", OtherKey="RegistrationOrderTypeId")]
		public EntitySet<RegistrationOrder> RegistrationOrder
		{
			get
			{
				return this._RegistrationOrder;
			}
			set
			{
				this._RegistrationOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationOrderType_Product", Storage="_Product", ThisKey="Id", OtherKey="RegistrationOrderTypeId")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RegistrationOrder(RegistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationOrderType = this;
		}
		
		private void detach_RegistrationOrder(RegistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationOrderType = null;
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationOrderType = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationOrderType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentType")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public DocumentType()
		{
			this._Document = new EntitySet<Document>(new Action<Document>(this.attach_Document), new Action<Document>(this.detach_Document));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_Document", Storage="_Document", ThisKey="Id", OtherKey="DokumentTypeId")]
		public EntitySet<Document> Document
		{
			get
			{
				return this._Document;
			}
			set
			{
				this._Document.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Document(Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_Document(Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DokumentTypeId;
		
		private string _FileName;
		
		private System.Data.Linq.Binary _Data;
		
		private string _MimeType;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<Invoice> _Invoice;
		
		private EntitySet<PackingList> _PackingList;
		
		private EntityRef<DocumentType> _DocumentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDokumentTypeIdChanging(int value);
    partial void OnDokumentTypeIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnDataChanging(System.Data.Linq.Binary value);
    partial void OnDataChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public Document()
		{
			this._Invoice = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice), new Action<Invoice>(this.detach_Invoice));
			this._PackingList = new EntitySet<PackingList>(new Action<PackingList>(this.attach_PackingList), new Action<PackingList>(this.detach_PackingList));
			this._DocumentType = default(EntityRef<DocumentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DokumentTypeId", DbType="int NOT NULL")]
		public int DokumentTypeId
		{
			get
			{
				return this._DokumentTypeId;
			}
			set
			{
				if ((this._DokumentTypeId != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDokumentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DokumentTypeId = value;
					this.SendPropertyChanged("DokumentTypeId");
					this.OnDokumentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Invoice", Storage="_Invoice", ThisKey="Id", OtherKey="DocumentId")]
		public EntitySet<Invoice> Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				this._Invoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_PackingList", Storage="_PackingList", ThisKey="Id", OtherKey="DocumentId")]
		public EntitySet<PackingList> PackingList
		{
			get
			{
				return this._PackingList;
			}
			set
			{
				this._PackingList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_Document", Storage="_DocumentType", ThisKey="DokumentTypeId", OtherKey="Id", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.Document.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.Document.Add(this);
						this._DokumentTypeId = value.Id;
					}
					else
					{
						this._DokumentTypeId = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_PackingList(PackingList entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_PackingList(PackingList entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mailinglist")]
	public partial class Mailinglist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CustomerId;
		
		private string _Email;
		
		private System.Nullable<int> _LocationId;
		
		private int _MailinglistTypeId;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<MailinglistType> _MailinglistType;
		
		private EntityRef<LargeCustomer> _LargeCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLocationIdChanging(System.Nullable<int> value);
    partial void OnLocationIdChanged();
    partial void OnMailinglistTypeIdChanging(int value);
    partial void OnMailinglistTypeIdChanged();
    #endregion
		
		public Mailinglist()
		{
			this._Location = default(EntityRef<Location>);
			this._MailinglistType = default(EntityRef<MailinglistType>);
			this._LargeCustomer = default(EntityRef<LargeCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._LargeCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailinglistTypeId", DbType="int not null")]
		public int MailinglistTypeId
		{
			get
			{
				return this._MailinglistTypeId;
			}
			set
			{
				if ((this._MailinglistTypeId != value))
				{
					if (this._MailinglistType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMailinglistTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MailinglistTypeId = value;
					this.SendPropertyChanged("MailinglistTypeId");
					this.OnMailinglistTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Mailinglist", Storage="_Location", ThisKey="LocationId", OtherKey="Id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Mailinglist.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Mailinglist.Add(this);
						this._LocationId = value.Id;
					}
					else
					{
						this._LocationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MailinglistType_Mailinglist", Storage="_MailinglistType", ThisKey="MailinglistTypeId", OtherKey="Id", IsForeignKey=true)]
		public MailinglistType MailinglistType
		{
			get
			{
				return this._MailinglistType.Entity;
			}
			set
			{
				MailinglistType previousValue = this._MailinglistType.Entity;
				if (((previousValue != value) 
							|| (this._MailinglistType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MailinglistType.Entity = null;
						previousValue.Mailinglist.Remove(this);
					}
					this._MailinglistType.Entity = value;
					if ((value != null))
					{
						value.Mailinglist.Add(this);
						this._MailinglistTypeId = value.Id;
					}
					else
					{
						this._MailinglistTypeId = default(int);
					}
					this.SendPropertyChanged("MailinglistType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LargeCustomer_Mailinglist", Storage="_LargeCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public LargeCustomer LargeCustomer
		{
			get
			{
				return this._LargeCustomer.Entity;
			}
			set
			{
				LargeCustomer previousValue = this._LargeCustomer.Entity;
				if (((previousValue != value) 
							|| (this._LargeCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LargeCustomer.Entity = null;
						previousValue.Mailinglist.Remove(this);
					}
					this._LargeCustomer.Entity = value;
					if ((value != null))
					{
						value.Mailinglist.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("LargeCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registration")]
	public partial class Registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CarOwnerId;
		
		private int _VehicleId;
		
		private string _Licencenumber;
		
		private System.Nullable<System.DateTime> _GeneralInspectionDate;
		
		private string _RegistrationDocumentNumber;
		
		private string _eVBNumber;
		
		private string _EmissionCode;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _ChangeDate;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<DeregistrationOrder> _DeregistrationOrder;
		
		private EntitySet<RegistrationOrder> _RegistrationOrder;
		
		private EntityRef<CarOwner> _CarOwner;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCarOwnerIdChanging(int value);
    partial void OnCarOwnerIdChanged();
    partial void OnVehicleIdChanging(int value);
    partial void OnVehicleIdChanged();
    partial void OnLicencenumberChanging(string value);
    partial void OnLicencenumberChanged();
    partial void OnGeneralInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGeneralInspectionDateChanged();
    partial void OnRegistrationDocumentNumberChanging(string value);
    partial void OnRegistrationDocumentNumberChanged();
    partial void OneVBNumberChanging(string value);
    partial void OneVBNumberChanged();
    partial void OnEmissionCodeChanging(string value);
    partial void OnEmissionCodeChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Registration()
		{
			this._DeregistrationOrder = new EntitySet<DeregistrationOrder>(new Action<DeregistrationOrder>(this.attach_DeregistrationOrder), new Action<DeregistrationOrder>(this.detach_DeregistrationOrder));
			this._RegistrationOrder = new EntitySet<RegistrationOrder>(new Action<RegistrationOrder>(this.attach_RegistrationOrder), new Action<RegistrationOrder>(this.detach_RegistrationOrder));
			this._CarOwner = default(EntityRef<CarOwner>);
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOwnerId", DbType="int NOT NULL")]
		public int CarOwnerId
		{
			get
			{
				return this._CarOwnerId;
			}
			set
			{
				if ((this._CarOwnerId != value))
				{
					if (this._CarOwner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._CarOwnerId = value;
					this.SendPropertyChanged("CarOwnerId");
					this.OnCarOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleId", DbType="int NOT NULL")]
		public int VehicleId
		{
			get
			{
				return this._VehicleId;
			}
			set
			{
				if ((this._VehicleId != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleIdChanging(value);
					this.SendPropertyChanging();
					this._VehicleId = value;
					this.SendPropertyChanged("VehicleId");
					this.OnVehicleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Licencenumber", DbType="VarChar(15) NOT NULL")]
		public string Licencenumber
		{
			get
			{
				return this._Licencenumber;
			}
			set
			{
				if ((this._Licencenumber != value))
				{
					this.OnLicencenumberChanging(value);
					this.SendPropertyChanging();
					this._Licencenumber = value;
					this.SendPropertyChanged("Licencenumber");
					this.OnLicencenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralInspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GeneralInspectionDate
		{
			get
			{
				return this._GeneralInspectionDate;
			}
			set
			{
				if ((this._GeneralInspectionDate != value))
				{
					this.OnGeneralInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._GeneralInspectionDate = value;
					this.SendPropertyChanged("GeneralInspectionDate");
					this.OnGeneralInspectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDocumentNumber", DbType="VarChar(20)")]
		public string RegistrationDocumentNumber
		{
			get
			{
				return this._RegistrationDocumentNumber;
			}
			set
			{
				if ((this._RegistrationDocumentNumber != value))
				{
					this.OnRegistrationDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDocumentNumber = value;
					this.SendPropertyChanged("RegistrationDocumentNumber");
					this.OnRegistrationDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eVBNumber", DbType="VarChar(7)")]
		public string eVBNumber
		{
			get
			{
				return this._eVBNumber;
			}
			set
			{
				if ((this._eVBNumber != value))
				{
					this.OneVBNumberChanging(value);
					this.SendPropertyChanging();
					this._eVBNumber = value;
					this.SendPropertyChanged("eVBNumber");
					this.OneVBNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmissionCode", DbType="varchar(5)")]
		public string EmissionCode
		{
			get
			{
				return this._EmissionCode;
			}
			set
			{
				if ((this._EmissionCode != value))
				{
					this.OnEmissionCodeChanging(value);
					this.SendPropertyChanging();
					this._EmissionCode = value;
					this.SendPropertyChanged("EmissionCode");
					this.OnEmissionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="Date")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Registration_DeregistrationOrder", Storage="_DeregistrationOrder", ThisKey="Id", OtherKey="RegistrationId")]
		public EntitySet<DeregistrationOrder> DeregistrationOrder
		{
			get
			{
				return this._DeregistrationOrder;
			}
			set
			{
				this._DeregistrationOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Registration_RegistrationOrder", Storage="_RegistrationOrder", ThisKey="Id", OtherKey="RegistrationId")]
		public EntitySet<RegistrationOrder> RegistrationOrder
		{
			get
			{
				return this._RegistrationOrder;
			}
			set
			{
				this._RegistrationOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOwner_Registration", Storage="_CarOwner", ThisKey="CarOwnerId", OtherKey="Id", IsForeignKey=true)]
		public CarOwner CarOwner
		{
			get
			{
				return this._CarOwner.Entity;
			}
			set
			{
				CarOwner previousValue = this._CarOwner.Entity;
				if (((previousValue != value) 
							|| (this._CarOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarOwner.Entity = null;
						previousValue.Registration.Remove(this);
					}
					this._CarOwner.Entity = value;
					if ((value != null))
					{
						value.Registration.Add(this);
						this._CarOwnerId = value.Id;
					}
					else
					{
						this._CarOwnerId = default(int);
					}
					this.SendPropertyChanged("CarOwner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Registration", Storage="_Vehicle", ThisKey="VehicleId", OtherKey="Id", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.Registration.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.Registration.Add(this);
						this._VehicleId = value.Id;
					}
					else
					{
						this._VehicleId = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeregistrationOrder(DeregistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.Registration = this;
		}
		
		private void detach_DeregistrationOrder(DeregistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.Registration = null;
		}
		
		private void attach_RegistrationOrder(RegistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.Registration = this;
		}
		
		private void detach_RegistrationOrder(RegistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.Registration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegistrationOrder")]
	public partial class RegistrationOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderNumber;
		
		private int _VehicleId;
		
		private int _RegistrationId;
		
		private string _Licencenumber;
		
		private string _PreviousLicencenumber;
		
		private int _RegistrationOrderTypeId;
		
		private string _eVBNumber;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _ChangeDate;
		
		private EntityRef<Registration> _Registration;
		
		private EntityRef<RegistrationOrderType> _RegistrationOrderType;
		
		private EntityRef<Vehicle> _Vehicle;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVehicleIdChanging(int value);
    partial void OnVehicleIdChanged();
    partial void OnRegistrationIdChanging(int value);
    partial void OnRegistrationIdChanged();
    partial void OnLicencenumberChanging(string value);
    partial void OnLicencenumberChanged();
    partial void OnPreviousLicencenumberChanging(string value);
    partial void OnPreviousLicencenumberChanged();
    partial void OnRegistrationOrderTypeIdChanging(int value);
    partial void OnRegistrationOrderTypeIdChanged();
    partial void OneVBNumberChanging(string value);
    partial void OneVBNumberChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public RegistrationOrder()
		{
			this._Registration = default(EntityRef<Registration>);
			this._RegistrationOrderType = default(EntityRef<RegistrationOrderType>);
			this._Vehicle = default(EntityRef<Vehicle>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="OrderNumber", Storage="_OrderNumber", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleId", DbType="int NOT NULL")]
		public int VehicleId
		{
			get
			{
				return this._VehicleId;
			}
			set
			{
				if ((this._VehicleId != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleIdChanging(value);
					this.SendPropertyChanging();
					this._VehicleId = value;
					this.SendPropertyChanged("VehicleId");
					this.OnVehicleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationId", DbType="int NOT NULL")]
		public int RegistrationId
		{
			get
			{
				return this._RegistrationId;
			}
			set
			{
				if ((this._RegistrationId != value))
				{
					if (this._Registration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationId = value;
					this.SendPropertyChanged("RegistrationId");
					this.OnRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Licencenumber", DbType="VarChar(15) NOT NULL")]
		public string Licencenumber
		{
			get
			{
				return this._Licencenumber;
			}
			set
			{
				if ((this._Licencenumber != value))
				{
					this.OnLicencenumberChanging(value);
					this.SendPropertyChanging();
					this._Licencenumber = value;
					this.SendPropertyChanged("Licencenumber");
					this.OnLicencenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousLicencenumber", DbType="VarChar(15)")]
		public string PreviousLicencenumber
		{
			get
			{
				return this._PreviousLicencenumber;
			}
			set
			{
				if ((this._PreviousLicencenumber != value))
				{
					this.OnPreviousLicencenumberChanging(value);
					this.SendPropertyChanging();
					this._PreviousLicencenumber = value;
					this.SendPropertyChanged("PreviousLicencenumber");
					this.OnPreviousLicencenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationOrderTypeId", DbType="int NOT NULL")]
		public int RegistrationOrderTypeId
		{
			get
			{
				return this._RegistrationOrderTypeId;
			}
			set
			{
				if ((this._RegistrationOrderTypeId != value))
				{
					if (this._RegistrationOrderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationOrderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationOrderTypeId = value;
					this.SendPropertyChanged("RegistrationOrderTypeId");
					this.OnRegistrationOrderTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eVBNumber", DbType="VarChar(7)")]
		public string eVBNumber
		{
			get
			{
				return this._eVBNumber;
			}
			set
			{
				if ((this._eVBNumber != value))
				{
					this.OneVBNumberChanging(value);
					this.SendPropertyChanging();
					this._eVBNumber = value;
					this.SendPropertyChanged("eVBNumber");
					this.OneVBNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Registration_RegistrationOrder", Storage="_Registration", ThisKey="RegistrationId", OtherKey="Id", IsForeignKey=true)]
		public Registration Registration
		{
			get
			{
				return this._Registration.Entity;
			}
			set
			{
				Registration previousValue = this._Registration.Entity;
				if (((previousValue != value) 
							|| (this._Registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Registration.Entity = null;
						previousValue.RegistrationOrder.Remove(this);
					}
					this._Registration.Entity = value;
					if ((value != null))
					{
						value.RegistrationOrder.Add(this);
						this._RegistrationId = value.Id;
					}
					else
					{
						this._RegistrationId = default(int);
					}
					this.SendPropertyChanged("Registration");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationOrderType_RegistrationOrder", Storage="_RegistrationOrderType", ThisKey="RegistrationOrderTypeId", OtherKey="Id", IsForeignKey=true)]
		public RegistrationOrderType RegistrationOrderType
		{
			get
			{
				return this._RegistrationOrderType.Entity;
			}
			set
			{
				RegistrationOrderType previousValue = this._RegistrationOrderType.Entity;
				if (((previousValue != value) 
							|| (this._RegistrationOrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegistrationOrderType.Entity = null;
						previousValue.RegistrationOrder.Remove(this);
					}
					this._RegistrationOrderType.Entity = value;
					if ((value != null))
					{
						value.RegistrationOrder.Add(this);
						this._RegistrationOrderTypeId = value.Id;
					}
					else
					{
						this._RegistrationOrderTypeId = default(int);
					}
					this.SendPropertyChanged("RegistrationOrderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_RegistrationOrder", Storage="_Vehicle", ThisKey="VehicleId", OtherKey="Id", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.RegistrationOrder.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.RegistrationOrder.Add(this);
						this._VehicleId = value.Id;
					}
					else
					{
						this._VehicleId = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_RegistrationOrder", Storage="_Order", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.RegistrationOrder = null;
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.RegistrationOrder = this;
						this._OrderNumber = value.Id;
					}
					else
					{
						this._OrderNumber = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Make")]
	public partial class Make : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _HSN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHSNChanging(string value);
    partial void OnHSNChanged();
    #endregion
		
		public Make()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSN", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string HSN
		{
			get
			{
				return this._HSN;
			}
			set
			{
				if ((this._HSN != value))
				{
					this.OnHSNChanging(value);
					this.SendPropertyChanging();
					this._HSN = value;
					this.SendPropertyChanged("HSN");
					this.OnHSNChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _VIN;
		
		private string _TSN;
		
		private string _Variant;
		
		private System.Nullable<int> _CurrentRegistrationId;
		
		private string _HSN;
		
		private System.Nullable<System.DateTime> _FirstRegistrationDate;
		
		private System.Nullable<int> _ColorCode;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<DeregistrationOrder> _DeregistrationOrder;
		
		private EntitySet<Registration> _Registration;
		
		private EntitySet<RegistrationOrder> _RegistrationOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVINChanging(string value);
    partial void OnVINChanged();
    partial void OnTSNChanging(string value);
    partial void OnTSNChanged();
    partial void OnVariantChanging(string value);
    partial void OnVariantChanged();
    partial void OnCurrentRegistrationIdChanging(System.Nullable<int> value);
    partial void OnCurrentRegistrationIdChanged();
    partial void OnHSNChanging(string value);
    partial void OnHSNChanged();
    partial void OnFirstRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstRegistrationDateChanged();
    partial void OnColorCodeChanging(System.Nullable<int> value);
    partial void OnColorCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public Vehicle()
		{
			this._DeregistrationOrder = new EntitySet<DeregistrationOrder>(new Action<DeregistrationOrder>(this.attach_DeregistrationOrder), new Action<DeregistrationOrder>(this.detach_DeregistrationOrder));
			this._Registration = new EntitySet<Registration>(new Action<Registration>(this.attach_Registration), new Action<Registration>(this.detach_Registration));
			this._RegistrationOrder = new EntitySet<RegistrationOrder>(new Action<RegistrationOrder>(this.attach_RegistrationOrder), new Action<RegistrationOrder>(this.detach_RegistrationOrder));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIN", DbType="VarChar(17) NOT NULL")]
		public string VIN
		{
			get
			{
				return this._VIN;
			}
			set
			{
				if ((this._VIN != value))
				{
					this.OnVINChanging(value);
					this.SendPropertyChanging();
					this._VIN = value;
					this.SendPropertyChanged("VIN");
					this.OnVINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TSN", DbType="VarChar(4) NOT NULL")]
		public string TSN
		{
			get
			{
				return this._TSN;
			}
			set
			{
				if ((this._TSN != value))
				{
					this.OnTSNChanging(value);
					this.SendPropertyChanging();
					this._TSN = value;
					this.SendPropertyChanged("TSN");
					this.OnTSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variant", DbType="VarChar(50)")]
		public string Variant
		{
			get
			{
				return this._Variant;
			}
			set
			{
				if ((this._Variant != value))
				{
					this.OnVariantChanging(value);
					this.SendPropertyChanging();
					this._Variant = value;
					this.SendPropertyChanged("Variant");
					this.OnVariantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentRegistrationId", DbType="int")]
		public System.Nullable<int> CurrentRegistrationId
		{
			get
			{
				return this._CurrentRegistrationId;
			}
			set
			{
				if ((this._CurrentRegistrationId != value))
				{
					this.OnCurrentRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._CurrentRegistrationId = value;
					this.SendPropertyChanged("CurrentRegistrationId");
					this.OnCurrentRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSN", DbType="varchar(4) not null")]
		public string HSN
		{
			get
			{
				return this._HSN;
			}
			set
			{
				if ((this._HSN != value))
				{
					this.OnHSNChanging(value);
					this.SendPropertyChanging();
					this._HSN = value;
					this.SendPropertyChanged("HSN");
					this.OnHSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistrationDate", DbType="datetime")]
		public System.Nullable<System.DateTime> FirstRegistrationDate
		{
			get
			{
				return this._FirstRegistrationDate;
			}
			set
			{
				if ((this._FirstRegistrationDate != value))
				{
					this.OnFirstRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._FirstRegistrationDate = value;
					this.SendPropertyChanged("FirstRegistrationDate");
					this.OnFirstRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorCode", DbType="int")]
		public System.Nullable<int> ColorCode
		{
			get
			{
				return this._ColorCode;
			}
			set
			{
				if ((this._ColorCode != value))
				{
					this.OnColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ColorCode = value;
					this.SendPropertyChanged("ColorCode");
					this.OnColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_DeregistrationOrder", Storage="_DeregistrationOrder", ThisKey="Id", OtherKey="VehicleId")]
		public EntitySet<DeregistrationOrder> DeregistrationOrder
		{
			get
			{
				return this._DeregistrationOrder;
			}
			set
			{
				this._DeregistrationOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Registration", Storage="_Registration", ThisKey="Id", OtherKey="VehicleId")]
		public EntitySet<Registration> Registration
		{
			get
			{
				return this._Registration;
			}
			set
			{
				this._Registration.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_RegistrationOrder", Storage="_RegistrationOrder", ThisKey="Id", OtherKey="VehicleId")]
		public EntitySet<RegistrationOrder> RegistrationOrder
		{
			get
			{
				return this._RegistrationOrder;
			}
			set
			{
				this._RegistrationOrder.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeregistrationOrder(DeregistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_DeregistrationOrder(DeregistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
		
		private void attach_Registration(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_Registration(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
		
		private void attach_RegistrationOrder(RegistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_RegistrationOrder(RegistrationOrder entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _CreateDate;
		
		private bool _IsPrinted;
		
		private System.Nullable<System.DateTime> _PrintDate;
		
		private System.Nullable<int> _UserId;
		
		private string _InvoiceRecipient;
		
		private int _InvoiceRecipientAdressId;
		
		private int _CustomerId;
		
		private System.Nullable<int> _DocumentId;
		
		private string _InvoiceText;
		
		private System.Nullable<decimal> _discount;
		
		private System.Nullable<int> _InvoiceType;
		
		private System.Nullable<bool> _canceled;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<OrderInvoice> _OrderInvoice;
		
		private EntityRef<InvoiceNumber> _InvoiceNumber;
		
		private EntitySet<InvoiceItem> _InvoiceItem;
		
		private EntityRef<Adress> _Adress;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Document> _Document;
		
		private EntityRef<User> _User;
		
		private EntityRef<InvoiceTypes> _InvoiceTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnIsPrintedChanging(bool value);
    partial void OnIsPrintedChanged();
    partial void OnPrintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrintDateChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnInvoiceRecipientChanging(string value);
    partial void OnInvoiceRecipientChanged();
    partial void OnInvoiceRecipientAdressIdChanging(int value);
    partial void OnInvoiceRecipientAdressIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnDocumentIdChanging(System.Nullable<int> value);
    partial void OnDocumentIdChanged();
    partial void OnInvoiceTextChanging(string value);
    partial void OnInvoiceTextChanged();
    partial void OndiscountChanging(System.Nullable<decimal> value);
    partial void OndiscountChanged();
    partial void OnInvoiceTypeChanging(System.Nullable<int> value);
    partial void OnInvoiceTypeChanged();
    partial void OncanceledChanging(System.Nullable<bool> value);
    partial void OncanceledChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public Invoice()
		{
			this._OrderInvoice = new EntitySet<OrderInvoice>(new Action<OrderInvoice>(this.attach_OrderInvoice), new Action<OrderInvoice>(this.detach_OrderInvoice));
			this._InvoiceNumber = default(EntityRef<InvoiceNumber>);
			this._InvoiceItem = new EntitySet<InvoiceItem>(new Action<InvoiceItem>(this.attach_InvoiceItem), new Action<InvoiceItem>(this.detach_InvoiceItem));
			this._Adress = default(EntityRef<Adress>);
			this._Customer = default(EntityRef<Customer>);
			this._Document = default(EntityRef<Document>);
			this._User = default(EntityRef<User>);
			this._InvoiceTypes = default(EntityRef<InvoiceTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit NOT NULL")]
		public bool IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PrintDate
		{
			get
			{
				return this._PrintDate;
			}
			set
			{
				if ((this._PrintDate != value))
				{
					this.OnPrintDateChanging(value);
					this.SendPropertyChanging();
					this._PrintDate = value;
					this.SendPropertyChanged("PrintDate");
					this.OnPrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceRecipient", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string InvoiceRecipient
		{
			get
			{
				return this._InvoiceRecipient;
			}
			set
			{
				if ((this._InvoiceRecipient != value))
				{
					this.OnInvoiceRecipientChanging(value);
					this.SendPropertyChanging();
					this._InvoiceRecipient = value;
					this.SendPropertyChanged("InvoiceRecipient");
					this.OnInvoiceRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceRecipientAdressId", DbType="int NOT NULL")]
		public int InvoiceRecipientAdressId
		{
			get
			{
				return this._InvoiceRecipientAdressId;
			}
			set
			{
				if ((this._InvoiceRecipientAdressId != value))
				{
					if (this._Adress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceRecipientAdressIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceRecipientAdressId = value;
					this.SendPropertyChanged("InvoiceRecipientAdressId");
					this.OnInvoiceRecipientAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentId", DbType="int")]
		public System.Nullable<int> DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceText", DbType="varchar(500)")]
		public string InvoiceText
		{
			get
			{
				return this._InvoiceText;
			}
			set
			{
				if ((this._InvoiceText != value))
				{
					this.OnInvoiceTextChanging(value);
					this.SendPropertyChanging();
					this._InvoiceText = value;
					this.SendPropertyChanged("InvoiceText");
					this.OnInvoiceTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="int")]
		public System.Nullable<int> InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					if (this._InvoiceTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canceled", DbType="Bit")]
		public System.Nullable<bool> canceled
		{
			get
			{
				return this._canceled;
			}
			set
			{
				if ((this._canceled != value))
				{
					this.OncanceledChanging(value);
					this.SendPropertyChanging();
					this._canceled = value;
					this.SendPropertyChanged("canceled");
					this.OncanceledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_OrderInvoice", Storage="_OrderInvoice", ThisKey="Id", OtherKey="InvoiceId")]
		public EntitySet<OrderInvoice> OrderInvoice
		{
			get
			{
				return this._OrderInvoice;
			}
			set
			{
				this._OrderInvoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceNumber", Storage="_InvoiceNumber", ThisKey="Id", OtherKey="InvoiceId", IsUnique=true, IsForeignKey=false)]
		public InvoiceNumber InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber.Entity;
			}
			set
			{
				InvoiceNumber previousValue = this._InvoiceNumber.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNumber.Entity = null;
						previousValue.Invoice = null;
					}
					this._InvoiceNumber.Entity = value;
					if ((value != null))
					{
						value.Invoice = this;
					}
					this.SendPropertyChanged("InvoiceNumber");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceItem", Storage="_InvoiceItem", ThisKey="Id", OtherKey="InvoiceId")]
		public EntitySet<InvoiceItem> InvoiceItem
		{
			get
			{
				return this._InvoiceItem;
			}
			set
			{
				this._InvoiceItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_Invoice", Storage="_Adress", ThisKey="InvoiceRecipientAdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress Adress
		{
			get
			{
				return this._Adress.Entity;
			}
			set
			{
				Adress previousValue = this._Adress.Entity;
				if (((previousValue != value) 
							|| (this._Adress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adress.Entity = null;
						previousValue.Invoice.Remove(this);
					}
					this._Adress.Entity = value;
					if ((value != null))
					{
						value.Invoice.Add(this);
						this._InvoiceRecipientAdressId = value.Id;
					}
					else
					{
						this._InvoiceRecipientAdressId = default(int);
					}
					this.SendPropertyChanged("Adress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invoice", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Invoice.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Invoice.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Invoice", Storage="_Document", ThisKey="DocumentId", OtherKey="Id", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.Invoice.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.Invoice.Add(this);
						this._DocumentId = value.Id;
					}
					else
					{
						this._DocumentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Invoice.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Invoice.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTypes_Invoice", Storage="_InvoiceTypes", ThisKey="InvoiceType", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public InvoiceTypes InvoiceTypes
		{
			get
			{
				return this._InvoiceTypes.Entity;
			}
			set
			{
				InvoiceTypes previousValue = this._InvoiceTypes.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceTypes.Entity = null;
						previousValue.Invoice.Remove(this);
					}
					this._InvoiceTypes.Entity = value;
					if ((value != null))
					{
						value.Invoice.Add(this);
						this._InvoiceType = value.Id;
					}
					else
					{
						this._InvoiceType = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderInvoice(OrderInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_OrderInvoice(OrderInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_InvoiceItem(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceItem(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNumber")]
	public partial class InvoiceNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private int _Number;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    #endregion
		
		public InvoiceNumber()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceNumber", Storage="_Invoice", ThisKey="InvoiceId", OtherKey="Id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceNumber = null;
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceNumber = this;
						this._InvoiceId = value.Id;
					}
					else
					{
						this._InvoiceId = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LargeCustomerRequiredField")]
	public partial class LargeCustomerRequiredField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LargeCustomerId;
		
		private int _RequiredFieldId;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntityRef<RequiredField> _RequiredField;
		
		private EntityRef<LargeCustomer> _LargeCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRequiredFieldIdChanging(int value);
    partial void OnRequiredFieldIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public LargeCustomerRequiredField()
		{
			this._RequiredField = default(EntityRef<RequiredField>);
			this._LargeCustomer = default(EntityRef<LargeCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LargeCustomerId", Storage="_LargeCustomerId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._LargeCustomerId;
			}
			set
			{
				if ((this._LargeCustomerId != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._LargeCustomerId = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredFieldId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int RequiredFieldId
		{
			get
			{
				return this._RequiredFieldId;
			}
			set
			{
				if ((this._RequiredFieldId != value))
				{
					if (this._RequiredField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequiredFieldIdChanging(value);
					this.SendPropertyChanging();
					this._RequiredFieldId = value;
					this.SendPropertyChanged("RequiredFieldId");
					this.OnRequiredFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequiredField_LargeCustomerRequiredField", Storage="_RequiredField", ThisKey="RequiredFieldId", OtherKey="Id", IsForeignKey=true)]
		public RequiredField RequiredField
		{
			get
			{
				return this._RequiredField.Entity;
			}
			set
			{
				RequiredField previousValue = this._RequiredField.Entity;
				if (((previousValue != value) 
							|| (this._RequiredField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequiredField.Entity = null;
						previousValue.LargeCustomerRequiredField.Remove(this);
					}
					this._RequiredField.Entity = value;
					if ((value != null))
					{
						value.LargeCustomerRequiredField.Add(this);
						this._RequiredFieldId = value.Id;
					}
					else
					{
						this._RequiredFieldId = default(int);
					}
					this.SendPropertyChanged("RequiredField");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LargeCustomer_LargeCustomerRequiredField", Storage="_LargeCustomer", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public LargeCustomer LargeCustomer
		{
			get
			{
				return this._LargeCustomer.Entity;
			}
			set
			{
				LargeCustomer previousValue = this._LargeCustomer.Entity;
				if (((previousValue != value) 
							|| (this._LargeCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LargeCustomer.Entity = null;
						previousValue.LargeCustomerRequiredField.Remove(this);
					}
					this._LargeCustomer.Entity = value;
					if ((value != null))
					{
						value.LargeCustomerRequiredField.Add(this);
						this._LargeCustomerId = value.Id;
					}
					else
					{
						this._LargeCustomerId = default(int);
					}
					this.SendPropertyChanged("LargeCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequiredField")]
	public partial class RequiredField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _OrderTypeId;
		
		private EntitySet<LargeCustomerRequiredField> _LargeCustomerRequiredField;
		
		private EntityRef<OrderType> _OrderType;
		
		private EntityRef<RequiredFieldTranslation> _RequiredFieldTranslation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOrderTypeIdChanging(int value);
    partial void OnOrderTypeIdChanged();
    #endregion
		
		public RequiredField()
		{
			this._LargeCustomerRequiredField = new EntitySet<LargeCustomerRequiredField>(new Action<LargeCustomerRequiredField>(this.attach_LargeCustomerRequiredField), new Action<LargeCustomerRequiredField>(this.detach_LargeCustomerRequiredField));
			this._OrderType = default(EntityRef<OrderType>);
			this._RequiredFieldTranslation = default(EntityRef<RequiredFieldTranslation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._RequiredFieldTranslation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeId", DbType="int NOT NULL")]
		public int OrderTypeId
		{
			get
			{
				return this._OrderTypeId;
			}
			set
			{
				if ((this._OrderTypeId != value))
				{
					if (this._OrderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeId = value;
					this.SendPropertyChanged("OrderTypeId");
					this.OnOrderTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequiredField_LargeCustomerRequiredField", Storage="_LargeCustomerRequiredField", ThisKey="Id", OtherKey="RequiredFieldId")]
		public EntitySet<LargeCustomerRequiredField> LargeCustomerRequiredField
		{
			get
			{
				return this._LargeCustomerRequiredField;
			}
			set
			{
				this._LargeCustomerRequiredField.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_RequiredField", Storage="_OrderType", ThisKey="OrderTypeId", OtherKey="Id", IsForeignKey=true)]
		public OrderType OrderType
		{
			get
			{
				return this._OrderType.Entity;
			}
			set
			{
				OrderType previousValue = this._OrderType.Entity;
				if (((previousValue != value) 
							|| (this._OrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderType.Entity = null;
						previousValue.RequiredField.Remove(this);
					}
					this._OrderType.Entity = value;
					if ((value != null))
					{
						value.RequiredField.Add(this);
						this._OrderTypeId = value.Id;
					}
					else
					{
						this._OrderTypeId = default(int);
					}
					this.SendPropertyChanged("OrderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequiredFieldTranslation_RequiredField", Storage="_RequiredFieldTranslation", ThisKey="Id", OtherKey="RequiredFieldId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RequiredFieldTranslation RequiredFieldTranslation
		{
			get
			{
				return this._RequiredFieldTranslation.Entity;
			}
			set
			{
				RequiredFieldTranslation previousValue = this._RequiredFieldTranslation.Entity;
				if (((previousValue != value) 
							|| (this._RequiredFieldTranslation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequiredFieldTranslation.Entity = null;
						previousValue.RequiredField = null;
					}
					this._RequiredFieldTranslation.Entity = value;
					if ((value != null))
					{
						value.RequiredField = this;
						this._Id = value.RequiredFieldId;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("RequiredFieldTranslation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LargeCustomerRequiredField(LargeCustomerRequiredField entity)
		{
			this.SendPropertyChanging();
			entity.RequiredField = this;
		}
		
		private void detach_LargeCustomerRequiredField(LargeCustomerRequiredField entity)
		{
			this.SendPropertyChanging();
			entity.RequiredField = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackingList")]
	public partial class PackingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackingListNumber;
		
		private string _DispatchOrderNumber;
		
		private System.Nullable<bool> _IsSelfDispatch;
		
		private System.Nullable<bool> _IsPrinted;
		
		private int _RecipientAdressId;
		
		private string _Recipient;
		
		private System.Nullable<int> _DocumentId;
		
		private System.Nullable<int> _OldOrderId;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private EntitySet<Order> _Order;
		
		private EntityRef<Document> _Document;
		
		private EntityRef<Adress> _Adress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDispatchOrderNumberChanging(string value);
    partial void OnDispatchOrderNumberChanged();
    partial void OnIsSelfDispatchChanging(System.Nullable<bool> value);
    partial void OnIsSelfDispatchChanged();
    partial void OnIsPrintedChanging(System.Nullable<bool> value);
    partial void OnIsPrintedChanged();
    partial void OnRecipientAdressIdChanging(int value);
    partial void OnRecipientAdressIdChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnDocumentIdChanging(System.Nullable<int> value);
    partial void OnDocumentIdChanged();
    partial void OnOldOrderNumberChanging(System.Nullable<int> value);
    partial void OnOldOrderNumberChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public PackingList()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Document = default(EntityRef<Document>);
			this._Adress = default(EntityRef<Adress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PackingListNumber", Storage="_PackingListNumber", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._PackingListNumber;
			}
			set
			{
				if ((this._PackingListNumber != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._PackingListNumber = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchOrderNumber", DbType="VarChar(50)")]
		public string DispatchOrderNumber
		{
			get
			{
				return this._DispatchOrderNumber;
			}
			set
			{
				if ((this._DispatchOrderNumber != value))
				{
					this.OnDispatchOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._DispatchOrderNumber = value;
					this.SendPropertyChanged("DispatchOrderNumber");
					this.OnDispatchOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelfDispatch", DbType="Bit")]
		public System.Nullable<bool> IsSelfDispatch
		{
			get
			{
				return this._IsSelfDispatch;
			}
			set
			{
				if ((this._IsSelfDispatch != value))
				{
					this.OnIsSelfDispatchChanging(value);
					this.SendPropertyChanging();
					this._IsSelfDispatch = value;
					this.SendPropertyChanged("IsSelfDispatch");
					this.OnIsSelfDispatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="bit")]
		public System.Nullable<bool> IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientAdressId", DbType="int not null")]
		public int RecipientAdressId
		{
			get
			{
				return this._RecipientAdressId;
			}
			set
			{
				if ((this._RecipientAdressId != value))
				{
					if (this._Adress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipientAdressIdChanging(value);
					this.SendPropertyChanging();
					this._RecipientAdressId = value;
					this.SendPropertyChanged("RecipientAdressId");
					this.OnRecipientAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="varchar(50) not null", CanBeNull=false)]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentId", DbType="int")]
		public System.Nullable<int> DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldOrderId", DbType="int")]
		public System.Nullable<int> OldOrderNumber
		{
			get
			{
				return this._OldOrderId;
			}
			set
			{
				if ((this._OldOrderId != value))
				{
					this.OnOldOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OldOrderId = value;
					this.SendPropertyChanged("OldOrderNumber");
					this.OnOldOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingList_Order", Storage="_Order", ThisKey="Id", OtherKey="PackingListNumber")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_PackingList", Storage="_Document", ThisKey="DocumentId", OtherKey="Id", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.PackingList.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.PackingList.Add(this);
						this._DocumentId = value.Id;
					}
					else
					{
						this._DocumentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_PackingList", Storage="_Adress", ThisKey="RecipientAdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress Adress
		{
			get
			{
				return this._Adress.Entity;
			}
			set
			{
				Adress previousValue = this._Adress.Entity;
				if (((previousValue != value) 
							|| (this._Adress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adress.Entity = null;
						previousValue.PackingList.Remove(this);
					}
					this._Adress.Entity = value;
					if ((value != null))
					{
						value.PackingList.Add(this);
						this._RecipientAdressId = value.Id;
					}
					else
					{
						this._RecipientAdressId = default(int);
					}
					this.SendPropertyChanged("Adress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.PackingList = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.PackingList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private System.Nullable<int> _LocationId;
		
		private int _OrderTypeId;
		
		private int _Ordernumber;
		
		private int _Status;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _ExecutionDate;
		
		private System.Nullable<int> _UserId;
		
		private string _ErrorReason;
		
		private System.Nullable<bool> _HasError;
		
		private System.Nullable<int> _PackingListId;
		
		private string _FreeText;
		
		private System.Nullable<bool> _HasFinishedNoteBeenSent;
		
		private System.Nullable<System.DateTime> _FinishDate;
		
		private System.Nullable<int> _Zulassungsstelle;
		
		private System.Nullable<bool> _Geprueft;
		
		private System.Nullable<bool> _ReadyToSend;
		
		private System.Nullable<int> _DocketListId;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntityRef<DeregistrationOrder> _DeregistrationOrder;
		
		private EntitySet<OrderInvoice> _OrderInvoice;
		
		private EntitySet<OrderItem> _OrderItem;
		
		private EntityRef<RegistrationOrder> _RegistrationOrder;
		
		private EntityRef<PackingList> _PackingList;
		
		private EntityRef<RegistrationLocation> _RegistrationLocation;
		
		private EntityRef<DocketList> _DocketList;
		
		private EntityRef<User> _User;
		
		private EntityRef<OrderType> _OrderType;
		
		private EntityRef<OrderStatus> _OrderStatus;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnLocationIdChanging(System.Nullable<int> value);
    partial void OnLocationIdChanged();
    partial void OnOrderTypeIdChanging(int value);
    partial void OnOrderTypeIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnExecutionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExecutionDateChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnErrorReasonChanging(string value);
    partial void OnErrorReasonChanged();
    partial void OnHasErrorChanging(System.Nullable<bool> value);
    partial void OnHasErrorChanged();
    partial void OnPackingListNumberChanging(System.Nullable<int> value);
    partial void OnPackingListNumberChanged();
    partial void OnFreeTextChanging(string value);
    partial void OnFreeTextChanged();
    partial void OnHasFinishedNoteBeenSentChanging(System.Nullable<bool> value);
    partial void OnHasFinishedNoteBeenSentChanged();
    partial void OnFinishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishDateChanged();
    partial void OnZulassungsstelleChanging(System.Nullable<int> value);
    partial void OnZulassungsstelleChanged();
    partial void OnGeprueftChanging(System.Nullable<bool> value);
    partial void OnGeprueftChanged();
    partial void OnReadyToSendChanging(System.Nullable<bool> value);
    partial void OnReadyToSendChanged();
    partial void OnDocketListNumberChanging(System.Nullable<int> value);
    partial void OnDocketListNumberChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public Order()
		{
			this._DeregistrationOrder = default(EntityRef<DeregistrationOrder>);
			this._OrderInvoice = new EntitySet<OrderInvoice>(new Action<OrderInvoice>(this.attach_OrderInvoice), new Action<OrderInvoice>(this.detach_OrderInvoice));
			this._OrderItem = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItem), new Action<OrderItem>(this.detach_OrderItem));
			this._RegistrationOrder = default(EntityRef<RegistrationOrder>);
			this._PackingList = default(EntityRef<PackingList>);
			this._RegistrationLocation = default(EntityRef<RegistrationLocation>);
			this._DocketList = default(EntityRef<DocketList>);
			this._User = default(EntityRef<User>);
			this._OrderType = default(EntityRef<OrderType>);
			this._OrderStatus = default(EntityRef<OrderStatus>);
			this._Location = default(EntityRef<Location>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeId", DbType="int NOT NULL")]
		public int OrderTypeId
		{
			get
			{
				return this._OrderTypeId;
			}
			set
			{
				if ((this._OrderTypeId != value))
				{
					if (this._OrderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeId = value;
					this.SendPropertyChanged("OrderTypeId");
					this.OnOrderTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="OrderNumber", Storage="_Ordernumber", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Ordernumber;
			}
			set
			{
				if ((this._Ordernumber != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Ordernumber = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._OrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExecutionDate
		{
			get
			{
				return this._ExecutionDate;
			}
			set
			{
				if ((this._ExecutionDate != value))
				{
					this.OnExecutionDateChanging(value);
					this.SendPropertyChanging();
					this._ExecutionDate = value;
					this.SendPropertyChanged("ExecutionDate");
					this.OnExecutionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorReason", DbType="VarChar(100)")]
		public string ErrorReason
		{
			get
			{
				return this._ErrorReason;
			}
			set
			{
				if ((this._ErrorReason != value))
				{
					this.OnErrorReasonChanging(value);
					this.SendPropertyChanging();
					this._ErrorReason = value;
					this.SendPropertyChanged("ErrorReason");
					this.OnErrorReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasError", DbType="Bit")]
		public System.Nullable<bool> HasError
		{
			get
			{
				return this._HasError;
			}
			set
			{
				if ((this._HasError != value))
				{
					this.OnHasErrorChanging(value);
					this.SendPropertyChanging();
					this._HasError = value;
					this.SendPropertyChanged("HasError");
					this.OnHasErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackingListId", DbType="int")]
		public System.Nullable<int> PackingListNumber
		{
			get
			{
				return this._PackingListId;
			}
			set
			{
				if ((this._PackingListId != value))
				{
					if (this._PackingList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackingListNumberChanging(value);
					this.SendPropertyChanging();
					this._PackingListId = value;
					this.SendPropertyChanged("PackingListNumber");
					this.OnPackingListNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeText", DbType="varchar(200)")]
		public string FreeText
		{
			get
			{
				return this._FreeText;
			}
			set
			{
				if ((this._FreeText != value))
				{
					this.OnFreeTextChanging(value);
					this.SendPropertyChanging();
					this._FreeText = value;
					this.SendPropertyChanged("FreeText");
					this.OnFreeTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFinishedNoteBeenSent", DbType="bit")]
		public System.Nullable<bool> HasFinishedNoteBeenSent
		{
			get
			{
				return this._HasFinishedNoteBeenSent;
			}
			set
			{
				if ((this._HasFinishedNoteBeenSent != value))
				{
					this.OnHasFinishedNoteBeenSentChanging(value);
					this.SendPropertyChanging();
					this._HasFinishedNoteBeenSent = value;
					this.SendPropertyChanged("HasFinishedNoteBeenSent");
					this.OnHasFinishedNoteBeenSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDate", DbType="datetime")]
		public System.Nullable<System.DateTime> FinishDate
		{
			get
			{
				return this._FinishDate;
			}
			set
			{
				if ((this._FinishDate != value))
				{
					this.OnFinishDateChanging(value);
					this.SendPropertyChanging();
					this._FinishDate = value;
					this.SendPropertyChanged("FinishDate");
					this.OnFinishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zulassungsstelle")]
		public System.Nullable<int> Zulassungsstelle
		{
			get
			{
				return this._Zulassungsstelle;
			}
			set
			{
				if ((this._Zulassungsstelle != value))
				{
					if (this._RegistrationLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZulassungsstelleChanging(value);
					this.SendPropertyChanging();
					this._Zulassungsstelle = value;
					this.SendPropertyChanged("Zulassungsstelle");
					this.OnZulassungsstelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geprueft")]
		public System.Nullable<bool> Geprueft
		{
			get
			{
				return this._Geprueft;
			}
			set
			{
				if ((this._Geprueft != value))
				{
					this.OnGeprueftChanging(value);
					this.SendPropertyChanging();
					this._Geprueft = value;
					this.SendPropertyChanged("Geprueft");
					this.OnGeprueftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadyToSend", DbType="Bit")]
		public System.Nullable<bool> ReadyToSend
		{
			get
			{
				return this._ReadyToSend;
			}
			set
			{
				if ((this._ReadyToSend != value))
				{
					this.OnReadyToSendChanging(value);
					this.SendPropertyChanging();
					this._ReadyToSend = value;
					this.SendPropertyChanged("ReadyToSend");
					this.OnReadyToSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocketListId", DbType="int")]
		public System.Nullable<int> DocketListNumber
		{
			get
			{
				return this._DocketListId;
			}
			set
			{
				if ((this._DocketListId != value))
				{
					if (this._DocketList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocketListNumberChanging(value);
					this.SendPropertyChanging();
					this._DocketListId = value;
					this.SendPropertyChanged("DocketListNumber");
					this.OnDocketListNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_DeregistrationOrder", Storage="_DeregistrationOrder", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public DeregistrationOrder DeregistrationOrder
		{
			get
			{
				return this._DeregistrationOrder.Entity;
			}
			set
			{
				DeregistrationOrder previousValue = this._DeregistrationOrder.Entity;
				if (((previousValue != value) 
							|| (this._DeregistrationOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeregistrationOrder.Entity = null;
						previousValue.Order = null;
					}
					this._DeregistrationOrder.Entity = value;
					if ((value != null))
					{
						value.Order = this;
					}
					this.SendPropertyChanged("DeregistrationOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderInvoice", Storage="_OrderInvoice", ThisKey="Id", OtherKey="OrderNumber")]
		public EntitySet<OrderInvoice> OrderInvoice
		{
			get
			{
				return this._OrderInvoice;
			}
			set
			{
				this._OrderInvoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_OrderItem", ThisKey="Id", OtherKey="OrderNumber")]
		public EntitySet<OrderItem> OrderItem
		{
			get
			{
				return this._OrderItem;
			}
			set
			{
				this._OrderItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_RegistrationOrder", Storage="_RegistrationOrder", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public RegistrationOrder RegistrationOrder
		{
			get
			{
				return this._RegistrationOrder.Entity;
			}
			set
			{
				RegistrationOrder previousValue = this._RegistrationOrder.Entity;
				if (((previousValue != value) 
							|| (this._RegistrationOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegistrationOrder.Entity = null;
						previousValue.Order = null;
					}
					this._RegistrationOrder.Entity = value;
					if ((value != null))
					{
						value.Order = this;
					}
					this.SendPropertyChanged("RegistrationOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PackingList_Order", Storage="_PackingList", ThisKey="PackingListNumber", OtherKey="Id", IsForeignKey=true)]
		public PackingList PackingList
		{
			get
			{
				return this._PackingList.Entity;
			}
			set
			{
				PackingList previousValue = this._PackingList.Entity;
				if (((previousValue != value) 
							|| (this._PackingList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PackingList.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._PackingList.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._PackingListId = value.Id;
					}
					else
					{
						this._PackingListId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PackingList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationLocation_Order", Storage="_RegistrationLocation", ThisKey="Zulassungsstelle", OtherKey="Id", IsForeignKey=true)]
		public RegistrationLocation RegistrationLocation
		{
			get
			{
				return this._RegistrationLocation.Entity;
			}
			set
			{
				RegistrationLocation previousValue = this._RegistrationLocation.Entity;
				if (((previousValue != value) 
							|| (this._RegistrationLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegistrationLocation.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._RegistrationLocation.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._Zulassungsstelle = value.Id;
					}
					else
					{
						this._Zulassungsstelle = default(Nullable<int>);
					}
					this.SendPropertyChanged("RegistrationLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocketList_Order", Storage="_DocketList", ThisKey="DocketListNumber", OtherKey="Id", IsForeignKey=true)]
		public DocketList DocketList
		{
			get
			{
				return this._DocketList.Entity;
			}
			set
			{
				DocketList previousValue = this._DocketList.Entity;
				if (((previousValue != value) 
							|| (this._DocketList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocketList.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._DocketList.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._DocketListId = value.Id;
					}
					else
					{
						this._DocketListId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocketList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_Order", Storage="_OrderType", ThisKey="OrderTypeId", OtherKey="Id", IsForeignKey=true)]
		public OrderType OrderType
		{
			get
			{
				return this._OrderType.Entity;
			}
			set
			{
				OrderType previousValue = this._OrderType.Entity;
				if (((previousValue != value) 
							|| (this._OrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderType.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._OrderType.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._OrderTypeId = value.Id;
					}
					else
					{
						this._OrderTypeId = default(int);
					}
					this.SendPropertyChanged("OrderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderStatus_Order", Storage="_OrderStatus", ThisKey="Status", OtherKey="Id", IsForeignKey=true)]
		public OrderStatus OrderStatus
		{
			get
			{
				return this._OrderStatus.Entity;
			}
			set
			{
				OrderStatus previousValue = this._OrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderStatus.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._OrderStatus.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._Status = value.Id;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("OrderStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Order", Storage="_Location", ThisKey="LocationId", OtherKey="Id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._LocationId = value.Id;
					}
					else
					{
						this._LocationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderInvoice(OrderInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderInvoice(OrderInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailinglistType")]
	public partial class MailinglistType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Mailinglist> _Mailinglist;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public MailinglistType()
		{
			this._Mailinglist = new EntitySet<Mailinglist>(new Action<Mailinglist>(this.attach_Mailinglist), new Action<Mailinglist>(this.detach_Mailinglist));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int not null", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="varchar(50)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MailinglistType_Mailinglist", Storage="_Mailinglist", ThisKey="Id", OtherKey="MailinglistTypeId")]
		public EntitySet<Mailinglist> Mailinglist
		{
			get
			{
				return this._Mailinglist;
			}
			set
			{
				this._Mailinglist.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mailinglist(Mailinglist entity)
		{
			this.SendPropertyChanging();
			entity.MailinglistType = this;
		}
		
		private void detach_Mailinglist(Mailinglist entity)
		{
			this.SendPropertyChanging();
			entity.MailinglistType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class WebServiceLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Login;
		
		private string _Password;
		
		private EntitySet<WebServiceLoginCustomer> _WebServiceLoginCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public WebServiceLogin()
		{
			this._WebServiceLoginCustomer = new EntitySet<WebServiceLoginCustomer>(new Action<WebServiceLoginCustomer>(this.attach_WebServiceLoginCustomer), new Action<WebServiceLoginCustomer>(this.detach_WebServiceLoginCustomer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int not null", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="varchar(50) not null", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="varchar(20) not null", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="varchar(20) not null", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebServiceLogin_WebServiceLoginCustomer", Storage="_WebServiceLoginCustomer", ThisKey="Id", OtherKey="WebServiceLoginId")]
		public EntitySet<WebServiceLoginCustomer> WebServiceLoginCustomer
		{
			get
			{
				return this._WebServiceLoginCustomer;
			}
			set
			{
				this._WebServiceLoginCustomer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WebServiceLoginCustomer(WebServiceLoginCustomer entity)
		{
			this.SendPropertyChanging();
			entity.WebServiceLogin = this;
		}
		
		private void detach_WebServiceLoginCustomer(WebServiceLoginCustomer entity)
		{
			this.SendPropertyChanging();
			entity.WebServiceLogin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class WebServiceLoginCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WebServiceLoginId;
		
		private int _CustomerId;
		
		private EntityRef<WebServiceLogin> _WebServiceLogin;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWebServiceLoginIdChanging(int value);
    partial void OnWebServiceLoginIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    #endregion
		
		public WebServiceLoginCustomer()
		{
			this._WebServiceLogin = default(EntityRef<WebServiceLogin>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebServiceLoginId", DbType="int not null", IsPrimaryKey=true)]
		public int WebServiceLoginId
		{
			get
			{
				return this._WebServiceLoginId;
			}
			set
			{
				if ((this._WebServiceLoginId != value))
				{
					if (this._WebServiceLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWebServiceLoginIdChanging(value);
					this.SendPropertyChanging();
					this._WebServiceLoginId = value;
					this.SendPropertyChanged("WebServiceLoginId");
					this.OnWebServiceLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int not null", IsPrimaryKey=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebServiceLogin_WebServiceLoginCustomer", Storage="_WebServiceLogin", ThisKey="WebServiceLoginId", OtherKey="Id", IsForeignKey=true)]
		public WebServiceLogin WebServiceLogin
		{
			get
			{
				return this._WebServiceLogin.Entity;
			}
			set
			{
				WebServiceLogin previousValue = this._WebServiceLogin.Entity;
				if (((previousValue != value) 
							|| (this._WebServiceLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebServiceLogin.Entity = null;
						previousValue.WebServiceLoginCustomer.Remove(this);
					}
					this._WebServiceLogin.Entity = value;
					if ((value != null))
					{
						value.WebServiceLoginCustomer.Add(this);
						this._WebServiceLoginId = value.Id;
					}
					else
					{
						this._WebServiceLoginId = default(int);
					}
					this.SendPropertyChanged("WebServiceLogin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_WebServiceLoginCustomer", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.WebServiceLoginCustomer.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.WebServiceLoginCustomer.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class DocumentConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public DocumentConfiguration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="varchar(50)", CanBeNull=false, IsPrimaryKey=true, IsDbGenerated=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="varchar(500)", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceItem")]
	public partial class InvoiceItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _InvoiceId;
		
		private string _Name;
		
		private decimal _Amount;
		
		private int _Count;
		
		private decimal _VAT;
		
		private System.Nullable<int> _OrderItemId;
		
		private System.Nullable<int> _CostcenterId;
		
		private string _AccountNumber;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<InvoiceItemAccountItem> _InvoiceItemAccountItem;
		
		private EntityRef<CostCenter> _CostCenter;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<OrderItem> _OrderItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnVATChanging(decimal value);
    partial void OnVATChanged();
    partial void OnOrderItemIdChanging(System.Nullable<int> value);
    partial void OnOrderItemIdChanged();
    partial void OnCostcenterIdChanging(System.Nullable<int> value);
    partial void OnCostcenterIdChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public InvoiceItem()
		{
			this._InvoiceItemAccountItem = new EntitySet<InvoiceItemAccountItem>(new Action<InvoiceItemAccountItem>(this.attach_InvoiceItemAccountItem), new Action<InvoiceItemAccountItem>(this.detach_InvoiceItemAccountItem));
			this._CostCenter = default(EntityRef<CostCenter>);
			this._Invoice = default(EntityRef<Invoice>);
			this._OrderItem = default(EntityRef<OrderItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="int NOT NULL")]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Decimal(4,2) NOT NULL")]
		public decimal VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemId", DbType="int")]
		public System.Nullable<int> OrderItemId
		{
			get
			{
				return this._OrderItemId;
			}
			set
			{
				if ((this._OrderItemId != value))
				{
					if (this._OrderItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderItemIdChanging(value);
					this.SendPropertyChanging();
					this._OrderItemId = value;
					this.SendPropertyChanged("OrderItemId");
					this.OnOrderItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostcenterId", DbType="int")]
		public System.Nullable<int> CostcenterId
		{
			get
			{
				return this._CostcenterId;
			}
			set
			{
				if ((this._CostcenterId != value))
				{
					if (this._CostCenter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostcenterIdChanging(value);
					this.SendPropertyChanging();
					this._CostcenterId = value;
					this.SendPropertyChanged("CostcenterId");
					this.OnCostcenterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceItemAccountItem", Storage="_InvoiceItemAccountItem", ThisKey="Id", OtherKey="InvoiceItemId")]
		public EntitySet<InvoiceItemAccountItem> InvoiceItemAccountItem
		{
			get
			{
				return this._InvoiceItemAccountItem;
			}
			set
			{
				this._InvoiceItemAccountItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostCenter_InvoiceItem", Storage="_CostCenter", ThisKey="CostcenterId", OtherKey="Id", IsForeignKey=true)]
		public CostCenter CostCenter
		{
			get
			{
				return this._CostCenter.Entity;
			}
			set
			{
				CostCenter previousValue = this._CostCenter.Entity;
				if (((previousValue != value) 
							|| (this._CostCenter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostCenter.Entity = null;
						previousValue.InvoiceItem.Remove(this);
					}
					this._CostCenter.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem.Add(this);
						this._CostcenterId = value.Id;
					}
					else
					{
						this._CostcenterId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CostCenter");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceItem", Storage="_Invoice", ThisKey="InvoiceId", OtherKey="Id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceItem.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem.Add(this);
						this._InvoiceId = value.Id;
					}
					else
					{
						this._InvoiceId = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderItem_InvoiceItem", Storage="_OrderItem", ThisKey="OrderItemId", OtherKey="Id", IsForeignKey=true)]
		public OrderItem OrderItem
		{
			get
			{
				return this._OrderItem.Entity;
			}
			set
			{
				OrderItem previousValue = this._OrderItem.Entity;
				if (((previousValue != value) 
							|| (this._OrderItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderItem.Entity = null;
						previousValue.InvoiceItem.Remove(this);
					}
					this._OrderItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem.Add(this);
						this._OrderItemId = value.Id;
					}
					else
					{
						this._OrderItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceItemAccountItem(InvoiceItemAccountItem entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceItem = this;
		}
		
		private void detach_InvoiceItemAccountItem(InvoiceItemAccountItem entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Price")]
	public partial class Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProductId;
		
		private System.Nullable<int> _LocationId;
		
		private decimal _Amount;
		
		private System.Nullable<decimal> _AuthorativeCharge;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<PriceAccount> _PriceAccount;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnLocationIdChanging(System.Nullable<int> value);
    partial void OnLocationIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnAuthorativeChargeChanging(System.Nullable<decimal> value);
    partial void OnAuthorativeChargeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public Price()
		{
			this._PriceAccount = new EntitySet<PriceAccount>(new Action<PriceAccount>(this.attach_PriceAccount), new Action<PriceAccount>(this.detach_PriceAccount));
			this._Location = default(EntityRef<Location>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorativeCharge", DbType="Money")]
		public System.Nullable<decimal> AuthorativeCharge
		{
			get
			{
				return this._AuthorativeCharge;
			}
			set
			{
				if ((this._AuthorativeCharge != value))
				{
					this.OnAuthorativeChargeChanging(value);
					this.SendPropertyChanging();
					this._AuthorativeCharge = value;
					this.SendPropertyChanged("AuthorativeCharge");
					this.OnAuthorativeChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Price_PriceAccount", Storage="_PriceAccount", ThisKey="Id", OtherKey="PriceId")]
		public EntitySet<PriceAccount> PriceAccount
		{
			get
			{
				return this._PriceAccount;
			}
			set
			{
				this._PriceAccount.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Price", Storage="_Location", ThisKey="LocationId", OtherKey="Id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Price.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Price.Add(this);
						this._LocationId = value.Id;
					}
					else
					{
						this._LocationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Price", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Price.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Price.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PriceAccount(PriceAccount entity)
		{
			this.SendPropertyChanging();
			entity.Price = this;
		}
		
		private void detach_PriceAccount(PriceAccount entity)
		{
			this.SendPropertyChanging();
			entity.Price = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceAccount")]
	public partial class PriceAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PriceId;
		
		private int _AccountId;
		
		private EntityRef<Price> _Price;
		
		private EntityRef<Accounts> _Accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceIdChanging(int value);
    partial void OnPriceIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    #endregion
		
		public PriceAccount()
		{
			this._Price = default(EntityRef<Price>);
			this._Accounts = default(EntityRef<Accounts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int PriceId
		{
			get
			{
				return this._PriceId;
			}
			set
			{
				if ((this._PriceId != value))
				{
					if (this._Price.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceIdChanging(value);
					this.SendPropertyChanging();
					this._PriceId = value;
					this.SendPropertyChanged("PriceId");
					this.OnPriceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._Accounts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Price_PriceAccount", Storage="_Price", ThisKey="PriceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Price Price
		{
			get
			{
				return this._Price.Entity;
			}
			set
			{
				Price previousValue = this._Price.Entity;
				if (((previousValue != value) 
							|| (this._Price.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Price.Entity = null;
						previousValue.PriceAccount.Remove(this);
					}
					this._Price.Entity = value;
					if ((value != null))
					{
						value.PriceAccount.Add(this);
						this._PriceId = value.Id;
					}
					else
					{
						this._PriceId = default(int);
					}
					this.SendPropertyChanged("Price");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PriceAccount", Storage="_Accounts", ThisKey="AccountId", OtherKey="AccountId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Accounts Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Accounts previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.PriceAccount.Remove(this);
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.PriceAccount.Add(this);
						this._AccountId = value.AccountId;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceItemAccountItem")]
	public partial class InvoiceItemAccountItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIACCID;
		
		private int _InvoiceItemId;
		
		private string _RevenueAccountText;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInvoiceItemIdChanging(int value);
    partial void OnInvoiceItemIdChanged();
    partial void OnRevenueAccountTextChanging(string value);
    partial void OnRevenueAccountTextChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public InvoiceItemAccountItem()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="IIACCID", Storage="_IIACCID", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._IIACCID;
			}
			set
			{
				if ((this._IIACCID != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._IIACCID = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceItemId", DbType="int NOT NULL")]
		public int InvoiceItemId
		{
			get
			{
				return this._InvoiceItemId;
			}
			set
			{
				if ((this._InvoiceItemId != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceItemIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceItemId = value;
					this.SendPropertyChanged("InvoiceItemId");
					this.OnInvoiceItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueAccountText", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RevenueAccountText
		{
			get
			{
				return this._RevenueAccountText;
			}
			set
			{
				if ((this._RevenueAccountText != value))
				{
					this.OnRevenueAccountTextChanging(value);
					this.SendPropertyChanging();
					this._RevenueAccountText = value;
					this.SendPropertyChanged("RevenueAccountText");
					this.OnRevenueAccountTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceItemAccountItem", Storage="_InvoiceItem", ThisKey="InvoiceItemId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceItemAccountItem.Remove(this);
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceItemAccountItem.Add(this);
						this._InvoiceItemId = value.Id;
					}
					else
					{
						this._InvoiceItemId = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCategory")]
	public partial class ProductCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private EntitySet<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public ProductCategory()
		{
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_Product", Storage="_Product", ThisKey="Id", OtherKey="ProductCategoryId")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategory = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Accounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountId;
		
		private string _AccountNumber;
		
		private System.Nullable<int> _CustomerId;
		
		private EntitySet<PriceAccount> _PriceAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    #endregion
		
		public Accounts()
		{
			this._PriceAccount = new EntitySet<PriceAccount>(new Action<PriceAccount>(this.attach_PriceAccount), new Action<PriceAccount>(this.detach_PriceAccount));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accounts_PriceAccount", Storage="_PriceAccount", ThisKey="AccountId", OtherKey="AccountId")]
		public EntitySet<PriceAccount> PriceAccount
		{
			get
			{
				return this._PriceAccount;
			}
			set
			{
				this._PriceAccount.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PriceAccount(PriceAccount entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = this;
		}
		
		private void detach_PriceAccount(PriceAccount entity)
		{
			this.SendPropertyChanging();
			entity.Accounts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ProductCategoryId;
		
		private string _Name;
		
		private string _ItemNumber;
		
		private int _OrderTypeId;
		
		private System.Nullable<int> _RegistrationOrderTypeId;
		
		private bool _NeedsVAT;
		
		private bool _IsLocked;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<OrderItem> _OrderItem;
		
		private EntitySet<Price> _Price;
		
		private EntitySet<CustomerProduct> _CustomerProduct;
		
		private EntityRef<OrderType> _OrderType;
		
		private EntityRef<ProductCategory> _ProductCategory;
		
		private EntityRef<RegistrationOrderType> _RegistrationOrderType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCategoryIdChanging(System.Nullable<int> value);
    partial void OnProductCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnItemNumberChanging(string value);
    partial void OnItemNumberChanged();
    partial void OnOrderTypeIdChanging(int value);
    partial void OnOrderTypeIdChanged();
    partial void OnRegistrationOrderTypeIdChanging(System.Nullable<int> value);
    partial void OnRegistrationOrderTypeIdChanged();
    partial void OnNeedsVATChanging(bool value);
    partial void OnNeedsVATChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public Product()
		{
			this._OrderItem = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItem), new Action<OrderItem>(this.detach_OrderItem));
			this._Price = new EntitySet<Price>(new Action<Price>(this.attach_Price), new Action<Price>(this.detach_Price));
			this._CustomerProduct = new EntitySet<CustomerProduct>(new Action<CustomerProduct>(this.attach_CustomerProduct), new Action<CustomerProduct>(this.detach_CustomerProduct));
			this._OrderType = default(EntityRef<OrderType>);
			this._ProductCategory = default(EntityRef<ProductCategory>);
			this._RegistrationOrderType = default(EntityRef<RegistrationOrderType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryId", DbType="int")]
		public System.Nullable<int> ProductCategoryId
		{
			get
			{
				return this._ProductCategoryId;
			}
			set
			{
				if ((this._ProductCategoryId != value))
				{
					if (this._ProductCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryId = value;
					this.SendPropertyChanged("ProductCategoryId");
					this.OnProductCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeId", DbType="int NOT NULL")]
		public int OrderTypeId
		{
			get
			{
				return this._OrderTypeId;
			}
			set
			{
				if ((this._OrderTypeId != value))
				{
					if (this._OrderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeId = value;
					this.SendPropertyChanged("OrderTypeId");
					this.OnOrderTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationOrderTypeId", DbType="int")]
		public System.Nullable<int> RegistrationOrderTypeId
		{
			get
			{
				return this._RegistrationOrderTypeId;
			}
			set
			{
				if ((this._RegistrationOrderTypeId != value))
				{
					if (this._RegistrationOrderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationOrderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationOrderTypeId = value;
					this.SendPropertyChanged("RegistrationOrderTypeId");
					this.OnRegistrationOrderTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsVAT", DbType="Bit NOT NULL")]
		public bool NeedsVAT
		{
			get
			{
				return this._NeedsVAT;
			}
			set
			{
				if ((this._NeedsVAT != value))
				{
					this.OnNeedsVATChanging(value);
					this.SendPropertyChanging();
					this._NeedsVAT = value;
					this.SendPropertyChanged("NeedsVAT");
					this.OnNeedsVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderItem", Storage="_OrderItem", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<OrderItem> OrderItem
		{
			get
			{
				return this._OrderItem;
			}
			set
			{
				this._OrderItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Price", Storage="_Price", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<Price> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				this._Price.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CustomerProduct", Storage="_CustomerProduct", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<CustomerProduct> CustomerProduct
		{
			get
			{
				return this._CustomerProduct;
			}
			set
			{
				this._CustomerProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_Product", Storage="_OrderType", ThisKey="OrderTypeId", OtherKey="Id", IsForeignKey=true)]
		public OrderType OrderType
		{
			get
			{
				return this._OrderType.Entity;
			}
			set
			{
				OrderType previousValue = this._OrderType.Entity;
				if (((previousValue != value) 
							|| (this._OrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderType.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._OrderType.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._OrderTypeId = value.Id;
					}
					else
					{
						this._OrderTypeId = default(int);
					}
					this.SendPropertyChanged("OrderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_Product", Storage="_ProductCategory", ThisKey="ProductCategoryId", OtherKey="Id", IsForeignKey=true)]
		public ProductCategory ProductCategory
		{
			get
			{
				return this._ProductCategory.Entity;
			}
			set
			{
				ProductCategory previousValue = this._ProductCategory.Entity;
				if (((previousValue != value) 
							|| (this._ProductCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCategory.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._ProductCategory.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._ProductCategoryId = value.Id;
					}
					else
					{
						this._ProductCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationOrderType_Product", Storage="_RegistrationOrderType", ThisKey="RegistrationOrderTypeId", OtherKey="Id", IsForeignKey=true)]
		public RegistrationOrderType RegistrationOrderType
		{
			get
			{
				return this._RegistrationOrderType.Entity;
			}
			set
			{
				RegistrationOrderType previousValue = this._RegistrationOrderType.Entity;
				if (((previousValue != value) 
							|| (this._RegistrationOrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegistrationOrderType.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._RegistrationOrderType.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._RegistrationOrderTypeId = value.Id;
					}
					else
					{
						this._RegistrationOrderTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RegistrationOrderType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Price(Price entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Price(Price entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_CustomerProduct(CustomerProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_CustomerProduct(CustomerProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.temp_Customers2")]
	public partial class temp_Customers2
	{
		
		private string _Kundennummer;
		
		private string _Debitorenkonto;
		
		private string _Anrede;
		
		private string _Name;
		
		private string _Matchcode;
		
		private string _Vorname;
		
		private string _Firma;
		
		private string _Zusatz;
		
		private string _Ansprechpartner;
		
		private string _Strasse;
		
		private string _Hausnummer;
		
		private string _Zip;
		
		private string _Ort;
		
		private string _Land;
		
		private string _Telefon;
		
		private string _Telefax;
		
		private string _EMAIL;
		
		public temp_Customers2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kundennummer", DbType="VarChar(255)")]
		public string Kundennummer
		{
			get
			{
				return this._Kundennummer;
			}
			set
			{
				if ((this._Kundennummer != value))
				{
					this._Kundennummer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debitorenkonto", DbType="VarChar(255)")]
		public string Debitorenkonto
		{
			get
			{
				return this._Debitorenkonto;
			}
			set
			{
				if ((this._Debitorenkonto != value))
				{
					this._Debitorenkonto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anrede", DbType="VarChar(255)")]
		public string Anrede
		{
			get
			{
				return this._Anrede;
			}
			set
			{
				if ((this._Anrede != value))
				{
					this._Anrede = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matchcode", DbType="VarChar(255)")]
		public string Matchcode
		{
			get
			{
				return this._Matchcode;
			}
			set
			{
				if ((this._Matchcode != value))
				{
					this._Matchcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vorname", DbType="VarChar(255)")]
		public string Vorname
		{
			get
			{
				return this._Vorname;
			}
			set
			{
				if ((this._Vorname != value))
				{
					this._Vorname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firma", DbType="VarChar(255)")]
		public string Firma
		{
			get
			{
				return this._Firma;
			}
			set
			{
				if ((this._Firma != value))
				{
					this._Firma = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zusatz", DbType="VarChar(255)")]
		public string Zusatz
		{
			get
			{
				return this._Zusatz;
			}
			set
			{
				if ((this._Zusatz != value))
				{
					this._Zusatz = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ansprechpartner", DbType="VarChar(255)")]
		public string Ansprechpartner
		{
			get
			{
				return this._Ansprechpartner;
			}
			set
			{
				if ((this._Ansprechpartner != value))
				{
					this._Ansprechpartner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strasse", DbType="VarChar(255)")]
		public string Strasse
		{
			get
			{
				return this._Strasse;
			}
			set
			{
				if ((this._Strasse != value))
				{
					this._Strasse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hausnummer", DbType="VarChar(50)")]
		public string Hausnummer
		{
			get
			{
				return this._Hausnummer;
			}
			set
			{
				if ((this._Hausnummer != value))
				{
					this._Hausnummer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ort", DbType="VarChar(255)")]
		public string Ort
		{
			get
			{
				return this._Ort;
			}
			set
			{
				if ((this._Ort != value))
				{
					this._Ort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Land", DbType="VarChar(255)")]
		public string Land
		{
			get
			{
				return this._Land;
			}
			set
			{
				if ((this._Land != value))
				{
					this._Land = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="VarChar(255)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this._Telefon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefax", DbType="VarChar(255)")]
		public string Telefax
		{
			get
			{
				return this._Telefax;
			}
			set
			{
				if ((this._Telefax != value))
				{
					this._Telefax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(250)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this._EMAIL = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _FirstName;
		
		private string _Title;
		
		private string _Gender;
		
		private string _Extension;
		
		private string _salutation;
		
		private EntitySet<SmallCustomer> _SmallCustomer;
		
		private EntitySet<User> _User;
		
		private EntitySet<LargeCustomer> _LargeCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnsalutationChanging(string value);
    partial void OnsalutationChanged();
    #endregion
		
		public Person()
		{
			this._SmallCustomer = new EntitySet<SmallCustomer>(new Action<SmallCustomer>(this.attach_SmallCustomer), new Action<SmallCustomer>(this.detach_SmallCustomer));
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			this._LargeCustomer = new EntitySet<LargeCustomer>(new Action<LargeCustomer>(this.attach_LargeCustomer), new Action<LargeCustomer>(this.detach_LargeCustomer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(20)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(1)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(255)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salutation", DbType="VarChar(50)")]
		public string salutation
		{
			get
			{
				return this._salutation;
			}
			set
			{
				if ((this._salutation != value))
				{
					this.OnsalutationChanging(value);
					this.SendPropertyChanging();
					this._salutation = value;
					this.SendPropertyChanged("salutation");
					this.OnsalutationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_SmallCustomer", Storage="_SmallCustomer", ThisKey="Id", OtherKey="PersonId")]
		public EntitySet<SmallCustomer> SmallCustomer
		{
			get
			{
				return this._SmallCustomer;
			}
			set
			{
				this._SmallCustomer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_User", Storage="_User", ThisKey="Id", OtherKey="PersonId")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_LargeCustomer", Storage="_LargeCustomer", ThisKey="Id", OtherKey="PersonId")]
		public EntitySet<LargeCustomer> LargeCustomer
		{
			get
			{
				return this._LargeCustomer;
			}
			set
			{
				this._LargeCustomer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SmallCustomer(SmallCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_SmallCustomer(SmallCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_LargeCustomer(LargeCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_LargeCustomer(LargeCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LargeCustomer")]
	public partial class LargeCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private System.Nullable<int> _MainLocationId;
		
		private bool _SendInvoiceToMainLocation;
		
		private bool _SendInvoiceByEmail;
		
		private byte _OrderFinishedNoteSendType;
		
		private System.Nullable<bool> _SendOrderFinishedNoteToCustomer;
		
		private System.Nullable<bool> _SendOrderFinishedNoteToLocation;
		
		private System.Nullable<bool> _SendPackingListToCustomer;
		
		private System.Nullable<bool> _SendPackingListToLocation;
		
		private System.Nullable<int> _PersonId;
		
		private System.Nullable<int> _InvoiceTypesID;
		
		private EntitySet<CostCenter> _CostCenter;
		
		private EntitySet<Location> _Location;
		
		private EntitySet<Mailinglist> _Mailinglist;
		
		private EntitySet<LargeCustomerRequiredField> _LargeCustomerRequiredField;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Location> _Location1;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<InvoiceTypes> _InvoiceTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMainLocationIdChanging(System.Nullable<int> value);
    partial void OnMainLocationIdChanged();
    partial void OnSendInvoiceToMainLocationChanging(bool value);
    partial void OnSendInvoiceToMainLocationChanged();
    partial void OnSendInvoiceByEmailChanging(bool value);
    partial void OnSendInvoiceByEmailChanged();
    partial void OnOrderFinishedNoteSendTypeChanging(byte value);
    partial void OnOrderFinishedNoteSendTypeChanged();
    partial void OnSendOrderFinishedNoteToCustomerChanging(System.Nullable<bool> value);
    partial void OnSendOrderFinishedNoteToCustomerChanged();
    partial void OnSendOrderFinishedNoteToLocationChanging(System.Nullable<bool> value);
    partial void OnSendOrderFinishedNoteToLocationChanged();
    partial void OnSendPackingListToCustomerChanging(System.Nullable<bool> value);
    partial void OnSendPackingListToCustomerChanged();
    partial void OnSendPackingListToLocationChanging(System.Nullable<bool> value);
    partial void OnSendPackingListToLocationChanged();
    partial void OnPersonIdChanging(System.Nullable<int> value);
    partial void OnPersonIdChanged();
    partial void OnInvoiceTypesIDChanging(System.Nullable<int> value);
    partial void OnInvoiceTypesIDChanged();
    #endregion
		
		public LargeCustomer()
		{
			this._CostCenter = new EntitySet<CostCenter>(new Action<CostCenter>(this.attach_CostCenter), new Action<CostCenter>(this.detach_CostCenter));
			this._Location = new EntitySet<Location>(new Action<Location>(this.attach_Location), new Action<Location>(this.detach_Location));
			this._Mailinglist = new EntitySet<Mailinglist>(new Action<Mailinglist>(this.attach_Mailinglist), new Action<Mailinglist>(this.detach_Mailinglist));
			this._LargeCustomerRequiredField = new EntitySet<LargeCustomerRequiredField>(new Action<LargeCustomerRequiredField>(this.attach_LargeCustomerRequiredField), new Action<LargeCustomerRequiredField>(this.detach_LargeCustomerRequiredField));
			this._Customer = default(EntityRef<Customer>);
			this._Location1 = default(EntityRef<Location>);
			this._Person = default(EntityRef<Person>);
			this._InvoiceTypes = default(EntityRef<InvoiceTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CustomerId", Storage="_CustomerId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainLocationId", DbType="int")]
		public System.Nullable<int> MainLocationId
		{
			get
			{
				return this._MainLocationId;
			}
			set
			{
				if ((this._MainLocationId != value))
				{
					if (this._Location1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainLocationIdChanging(value);
					this.SendPropertyChanging();
					this._MainLocationId = value;
					this.SendPropertyChanged("MainLocationId");
					this.OnMainLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendInvoiceToMainLocation", DbType="Bit NOT NULL")]
		public bool SendInvoiceToMainLocation
		{
			get
			{
				return this._SendInvoiceToMainLocation;
			}
			set
			{
				if ((this._SendInvoiceToMainLocation != value))
				{
					this.OnSendInvoiceToMainLocationChanging(value);
					this.SendPropertyChanging();
					this._SendInvoiceToMainLocation = value;
					this.SendPropertyChanged("SendInvoiceToMainLocation");
					this.OnSendInvoiceToMainLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendInvoiceByEmail", DbType="Bit NOT NULL")]
		public bool SendInvoiceByEmail
		{
			get
			{
				return this._SendInvoiceByEmail;
			}
			set
			{
				if ((this._SendInvoiceByEmail != value))
				{
					this.OnSendInvoiceByEmailChanging(value);
					this.SendPropertyChanging();
					this._SendInvoiceByEmail = value;
					this.SendPropertyChanged("SendInvoiceByEmail");
					this.OnSendInvoiceByEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderFinishedNoteSendType", DbType="TinyInt NOT NULL")]
		public byte OrderFinishedNoteSendType
		{
			get
			{
				return this._OrderFinishedNoteSendType;
			}
			set
			{
				if ((this._OrderFinishedNoteSendType != value))
				{
					this.OnOrderFinishedNoteSendTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderFinishedNoteSendType = value;
					this.SendPropertyChanged("OrderFinishedNoteSendType");
					this.OnOrderFinishedNoteSendTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendOrderFinishedNoteToCustomer", DbType="Bit")]
		public System.Nullable<bool> SendOrderFinishedNoteToCustomer
		{
			get
			{
				return this._SendOrderFinishedNoteToCustomer;
			}
			set
			{
				if ((this._SendOrderFinishedNoteToCustomer != value))
				{
					this.OnSendOrderFinishedNoteToCustomerChanging(value);
					this.SendPropertyChanging();
					this._SendOrderFinishedNoteToCustomer = value;
					this.SendPropertyChanged("SendOrderFinishedNoteToCustomer");
					this.OnSendOrderFinishedNoteToCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendOrderFinishedNoteToLocation", DbType="Bit")]
		public System.Nullable<bool> SendOrderFinishedNoteToLocation
		{
			get
			{
				return this._SendOrderFinishedNoteToLocation;
			}
			set
			{
				if ((this._SendOrderFinishedNoteToLocation != value))
				{
					this.OnSendOrderFinishedNoteToLocationChanging(value);
					this.SendPropertyChanging();
					this._SendOrderFinishedNoteToLocation = value;
					this.SendPropertyChanged("SendOrderFinishedNoteToLocation");
					this.OnSendOrderFinishedNoteToLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendPackingListToCustomer", DbType="Bit")]
		public System.Nullable<bool> SendPackingListToCustomer
		{
			get
			{
				return this._SendPackingListToCustomer;
			}
			set
			{
				if ((this._SendPackingListToCustomer != value))
				{
					this.OnSendPackingListToCustomerChanging(value);
					this.SendPropertyChanging();
					this._SendPackingListToCustomer = value;
					this.SendPropertyChanged("SendPackingListToCustomer");
					this.OnSendPackingListToCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendPackingListToLocation", DbType="Bit")]
		public System.Nullable<bool> SendPackingListToLocation
		{
			get
			{
				return this._SendPackingListToLocation;
			}
			set
			{
				if ((this._SendPackingListToLocation != value))
				{
					this.OnSendPackingListToLocationChanging(value);
					this.SendPropertyChanging();
					this._SendPackingListToLocation = value;
					this.SendPropertyChanged("SendPackingListToLocation");
					this.OnSendPackingListToLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="int")]
		public System.Nullable<int> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTypesID", DbType="int")]
		public System.Nullable<int> InvoiceTypesID
		{
			get
			{
				return this._InvoiceTypesID;
			}
			set
			{
				if ((this._InvoiceTypesID != value))
				{
					if (this._InvoiceTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceTypesIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTypesID = value;
					this.SendPropertyChanged("InvoiceTypesID");
					this.OnInvoiceTypesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LargeCustomer_CostCenter", Storage="_CostCenter", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<CostCenter> CostCenter
		{
			get
			{
				return this._CostCenter;
			}
			set
			{
				this._CostCenter.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LargeCustomer_Location", Storage="_Location", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<Location> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LargeCustomer_Mailinglist", Storage="_Mailinglist", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<Mailinglist> Mailinglist
		{
			get
			{
				return this._Mailinglist;
			}
			set
			{
				this._Mailinglist.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LargeCustomer_LargeCustomerRequiredField", Storage="_LargeCustomerRequiredField", ThisKey="Id", OtherKey="Id")]
		public EntitySet<LargeCustomerRequiredField> LargeCustomerRequiredField
		{
			get
			{
				return this._LargeCustomerRequiredField;
			}
			set
			{
				this._LargeCustomerRequiredField.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_LargeCustomer", Storage="_Customer", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.LargeCustomer = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.LargeCustomer = this;
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_LargeCustomer", Storage="_Location1", ThisKey="MainLocationId", OtherKey="Id", IsForeignKey=true)]
		public Location Location1
		{
			get
			{
				return this._Location1.Entity;
			}
			set
			{
				Location previousValue = this._Location1.Entity;
				if (((previousValue != value) 
							|| (this._Location1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location1.Entity = null;
						previousValue.LargeCustomer1.Remove(this);
					}
					this._Location1.Entity = value;
					if ((value != null))
					{
						value.LargeCustomer1.Add(this);
						this._MainLocationId = value.Id;
					}
					else
					{
						this._MainLocationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Location1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_LargeCustomer", Storage="_Person", ThisKey="PersonId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.LargeCustomer.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.LargeCustomer.Add(this);
						this._PersonId = value.Id;
					}
					else
					{
						this._PersonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTypes_LargeCustomer", Storage="_InvoiceTypes", ThisKey="InvoiceTypesID", OtherKey="Id", IsForeignKey=true)]
		public InvoiceTypes InvoiceTypes
		{
			get
			{
				return this._InvoiceTypes.Entity;
			}
			set
			{
				InvoiceTypes previousValue = this._InvoiceTypes.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceTypes.Entity = null;
						previousValue.LargeCustomer.Remove(this);
					}
					this._InvoiceTypes.Entity = value;
					if ((value != null))
					{
						value.LargeCustomer.Add(this);
						this._InvoiceTypesID = value.Id;
					}
					else
					{
						this._InvoiceTypesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CostCenter(CostCenter entity)
		{
			this.SendPropertyChanging();
			entity.LargeCustomer = this;
		}
		
		private void detach_CostCenter(CostCenter entity)
		{
			this.SendPropertyChanging();
			entity.LargeCustomer = null;
		}
		
		private void attach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.LargeCustomer = this;
		}
		
		private void detach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.LargeCustomer = null;
		}
		
		private void attach_Mailinglist(Mailinglist entity)
		{
			this.SendPropertyChanging();
			entity.LargeCustomer = this;
		}
		
		private void detach_Mailinglist(Mailinglist entity)
		{
			this.SendPropertyChanging();
			entity.LargeCustomer = null;
		}
		
		private void attach_LargeCustomerRequiredField(LargeCustomerRequiredField entity)
		{
			this.SendPropertyChanging();
			entity.LargeCustomer = this;
		}
		
		private void detach_LargeCustomerRequiredField(LargeCustomerRequiredField entity)
		{
			this.SendPropertyChanging();
			entity.LargeCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceTypes")]
	public partial class InvoiceTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _InvoiceTypeName;
		
		private string _contraction;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<Invoice> _Invoice;
		
		private EntitySet<LargeCustomer> _LargeCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInvoiceTypeNameChanging(string value);
    partial void OnInvoiceTypeNameChanged();
    partial void OncontractionChanging(string value);
    partial void OncontractionChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public InvoiceTypes()
		{
			this._Invoice = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice), new Action<Invoice>(this.detach_Invoice));
			this._LargeCustomer = new EntitySet<LargeCustomer>(new Action<LargeCustomer>(this.attach_LargeCustomer), new Action<LargeCustomer>(this.detach_LargeCustomer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID", Storage="_ID", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTypeName", DbType="VarChar(255)")]
		public string InvoiceTypeName
		{
			get
			{
				return this._InvoiceTypeName;
			}
			set
			{
				if ((this._InvoiceTypeName != value))
				{
					this.OnInvoiceTypeNameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTypeName = value;
					this.SendPropertyChanged("InvoiceTypeName");
					this.OnInvoiceTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contraction", DbType="VarChar(50)")]
		public string contraction
		{
			get
			{
				return this._contraction;
			}
			set
			{
				if ((this._contraction != value))
				{
					this.OncontractionChanging(value);
					this.SendPropertyChanging();
					this._contraction = value;
					this.SendPropertyChanged("contraction");
					this.OncontractionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTypes_Invoice", Storage="_Invoice", ThisKey="Id", OtherKey="InvoiceType")]
		public EntitySet<Invoice> Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				this._Invoice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTypes_LargeCustomer", Storage="_LargeCustomer", ThisKey="Id", OtherKey="InvoiceTypesID")]
		public EntitySet<LargeCustomer> LargeCustomer
		{
			get
			{
				return this._LargeCustomer;
			}
			set
			{
				this._LargeCustomer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTypes = this;
		}
		
		private void detach_Invoice(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTypes = null;
		}
		
		private void attach_LargeCustomer(LargeCustomer entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTypes = this;
		}
		
		private void detach_LargeCustomer(LargeCustomer entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.temp_Products")]
	public partial class temp_Products
	{
		
		private string _Artikelnummer;
		
		private string _Bezeichnung;
		
		private string _Warengruppe;
		
		private string _KontoInland;
		
		private string _Preis;
		
		private string _Type;
		
		public temp_Products()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Artikelnummer", DbType="VarChar(255)")]
		public string Artikelnummer
		{
			get
			{
				return this._Artikelnummer;
			}
			set
			{
				if ((this._Artikelnummer != value))
				{
					this._Artikelnummer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bezeichnung", DbType="NVarChar(250)")]
		public string Bezeichnung
		{
			get
			{
				return this._Bezeichnung;
			}
			set
			{
				if ((this._Bezeichnung != value))
				{
					this._Bezeichnung = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warengruppe", DbType="NVarChar(250)")]
		public string Warengruppe
		{
			get
			{
				return this._Warengruppe;
			}
			set
			{
				if ((this._Warengruppe != value))
				{
					this._Warengruppe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KontoInland", DbType="NVarChar(250)")]
		public string KontoInland
		{
			get
			{
				return this._KontoInland;
			}
			set
			{
				if ((this._KontoInland != value))
				{
					this._KontoInland = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preis", DbType="NChar(10)")]
		public string Preis
		{
			get
			{
				return this._Preis;
			}
			set
			{
				if ((this._Preis != value))
				{
					this._Preis = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegistrationLocation")]
	public partial class RegistrationLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RegistrationLocationName;
		
		private System.Nullable<int> _RegistrationLocationAdressId;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntitySet<Order> _Order;
		
		private EntityRef<Adress> _Adress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRegistrationLocationNameChanging(string value);
    partial void OnRegistrationLocationNameChanged();
    partial void OnRegistrationLocationAdressIdChanging(System.Nullable<int> value);
    partial void OnRegistrationLocationAdressIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public RegistrationLocation()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Adress = default(EntityRef<Adress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID", Storage="_ID", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationLocationName", DbType="VarChar(255)")]
		public string RegistrationLocationName
		{
			get
			{
				return this._RegistrationLocationName;
			}
			set
			{
				if ((this._RegistrationLocationName != value))
				{
					this.OnRegistrationLocationNameChanging(value);
					this.SendPropertyChanging();
					this._RegistrationLocationName = value;
					this.SendPropertyChanged("RegistrationLocationName");
					this.OnRegistrationLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationLocationAdressId", DbType="int")]
		public System.Nullable<int> RegistrationLocationAdressId
		{
			get
			{
				return this._RegistrationLocationAdressId;
			}
			set
			{
				if ((this._RegistrationLocationAdressId != value))
				{
					if (this._Adress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationLocationAdressIdChanging(value);
					this.SendPropertyChanging();
					this._RegistrationLocationAdressId = value;
					this.SendPropertyChanged("RegistrationLocationAdressId");
					this.OnRegistrationLocationAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationLocation_Order", Storage="_Order", ThisKey="Id", OtherKey="Zulassungsstelle")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_RegistrationLocation", Storage="_Adress", ThisKey="RegistrationLocationAdressId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Adress Adress
		{
			get
			{
				return this._Adress.Entity;
			}
			set
			{
				Adress previousValue = this._Adress.Entity;
				if (((previousValue != value) 
							|| (this._Adress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adress.Entity = null;
						previousValue.RegistrationLocation.Remove(this);
					}
					this._Adress.Entity = value;
					if ((value != null))
					{
						value.RegistrationLocation.Add(this);
						this._RegistrationLocationAdressId = value.Id;
					}
					else
					{
						this._RegistrationLocationAdressId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Adress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationLocation = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequiredFieldTranslation")]
	public partial class RequiredFieldTranslation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequiredFieldId;
		
		private string _Name;
		
		private EntityRef<RequiredField> _RequiredField;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequiredFieldIdChanging(int value);
    partial void OnRequiredFieldIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public RequiredFieldTranslation()
		{
			this._RequiredField = default(EntityRef<RequiredField>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredFieldId", DbType="int NOT NULL", IsPrimaryKey=true)]
		public int RequiredFieldId
		{
			get
			{
				return this._RequiredFieldId;
			}
			set
			{
				if ((this._RequiredFieldId != value))
				{
					this.OnRequiredFieldIdChanging(value);
					this.SendPropertyChanging();
					this._RequiredFieldId = value;
					this.SendPropertyChanged("RequiredFieldId");
					this.OnRequiredFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequiredFieldTranslation_RequiredField", Storage="_RequiredField", ThisKey="RequiredFieldId", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public RequiredField RequiredField
		{
			get
			{
				return this._RequiredField.Entity;
			}
			set
			{
				RequiredField previousValue = this._RequiredField.Entity;
				if (((previousValue != value) 
							|| (this._RequiredField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequiredField.Entity = null;
						previousValue.RequiredFieldTranslation = null;
					}
					this._RequiredField.Entity = value;
					if ((value != null))
					{
						value.RequiredFieldTranslation = this;
					}
					this.SendPropertyChanged("RequiredField");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceRunReport")]
	public partial class InvoiceRunReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _InvoiceTypeId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _FinishedDate;
		
		private System.Nullable<int> _InvoiceRunProgress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnInvoiceTypeIdChanging(System.Nullable<int> value);
    partial void OnInvoiceTypeIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnFinishedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishedDateChanged();
    partial void OnInvoiceRunProgressChanging(System.Nullable<int> value);
    partial void OnInvoiceRunProgressChanged();
    #endregion
		
		public InvoiceRunReport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTypeId", DbType="int")]
		public System.Nullable<int> InvoiceTypeId
		{
			get
			{
				return this._InvoiceTypeId;
			}
			set
			{
				if ((this._InvoiceTypeId != value))
				{
					this.OnInvoiceTypeIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTypeId = value;
					this.SendPropertyChanged("InvoiceTypeId");
					this.OnInvoiceTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishedDate
		{
			get
			{
				return this._FinishedDate;
			}
			set
			{
				if ((this._FinishedDate != value))
				{
					this.OnFinishedDateChanging(value);
					this.SendPropertyChanging();
					this._FinishedDate = value;
					this.SendPropertyChanged("FinishedDate");
					this.OnFinishedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceRunProgress", DbType="Int")]
		public System.Nullable<int> InvoiceRunProgress
		{
			get
			{
				return this._InvoiceRunProgress;
			}
			set
			{
				if ((this._InvoiceRunProgress != value))
				{
					this.OnInvoiceRunProgressChanging(value);
					this.SendPropertyChanging();
					this._InvoiceRunProgress = value;
					this.SendPropertyChanged("InvoiceRunProgress");
					this.OnInvoiceRunProgressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceIDInvoiceRunID")]
	public partial class InvoiceIDInvoiceRunID
	{
		
		private System.Nullable<int> _InvoiceId;
		
		private System.Nullable<int> _InvoiceRunId;
		
		private System.Nullable<bool> _Complete;
		
		private System.Nullable<System.DateTime> _Updated;
		
		public InvoiceIDInvoiceRunID()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceRunId", DbType="int")]
		public System.Nullable<int> InvoiceRunId
		{
			get
			{
				return this._InvoiceRunId;
			}
			set
			{
				if ((this._InvoiceRunId != value))
				{
					this._InvoiceRunId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complete", DbType="Bit")]
		public System.Nullable<bool> Complete
		{
			get
			{
				return this._Complete;
			}
			set
			{
				if ((this._Complete != value))
				{
					this._Complete = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this._Updated = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIC_DE")]
	public partial class BIC_DE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Bankleitzahl;
		
		private string _Merkmal;
		
		private string _Bezeichnung;
		
		private string _PLZ;
		
		private string _Ort;
		
		private string _Kurzbezeichnung;
		
		private string _PAN;
		
		private string _BIC;
		
		private string _Pruefziffer;
		
		private string _Datensatznummer;
		
		private string _Aenderungskennzeichen;
		
		private string _Bankleitzahlloeschung;
		
		private string _Nachfolgebankleitzahl;
		
		private int _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankleitzahlChanging(string value);
    partial void OnBankleitzahlChanged();
    partial void OnMerkmalChanging(string value);
    partial void OnMerkmalChanged();
    partial void OnBezeichnungChanging(string value);
    partial void OnBezeichnungChanged();
    partial void OnPLZChanging(string value);
    partial void OnPLZChanged();
    partial void OnOrtChanging(string value);
    partial void OnOrtChanged();
    partial void OnKurzbezeichnungChanging(string value);
    partial void OnKurzbezeichnungChanged();
    partial void OnPANChanging(string value);
    partial void OnPANChanged();
    partial void OnBICChanging(string value);
    partial void OnBICChanged();
    partial void OnPruefzifferChanging(string value);
    partial void OnPruefzifferChanged();
    partial void OnDatensatznummerChanging(string value);
    partial void OnDatensatznummerChanged();
    partial void OnAenderungskennzeichenChanging(string value);
    partial void OnAenderungskennzeichenChanged();
    partial void OnBankleitzahlloeschungChanging(string value);
    partial void OnBankleitzahlloeschungChanged();
    partial void OnNachfolgebankleitzahlChanging(string value);
    partial void OnNachfolgebankleitzahlChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public BIC_DE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bankleitzahl", DbType="NVarChar(50)")]
		public string Bankleitzahl
		{
			get
			{
				return this._Bankleitzahl;
			}
			set
			{
				if ((this._Bankleitzahl != value))
				{
					this.OnBankleitzahlChanging(value);
					this.SendPropertyChanging();
					this._Bankleitzahl = value;
					this.SendPropertyChanged("Bankleitzahl");
					this.OnBankleitzahlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Merkmal", DbType="NVarChar(50)")]
		public string Merkmal
		{
			get
			{
				return this._Merkmal;
			}
			set
			{
				if ((this._Merkmal != value))
				{
					this.OnMerkmalChanging(value);
					this.SendPropertyChanging();
					this._Merkmal = value;
					this.SendPropertyChanged("Merkmal");
					this.OnMerkmalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bezeichnung", DbType="NVarChar(500)")]
		public string Bezeichnung
		{
			get
			{
				return this._Bezeichnung;
			}
			set
			{
				if ((this._Bezeichnung != value))
				{
					this.OnBezeichnungChanging(value);
					this.SendPropertyChanging();
					this._Bezeichnung = value;
					this.SendPropertyChanged("Bezeichnung");
					this.OnBezeichnungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLZ", DbType="NVarChar(50)")]
		public string PLZ
		{
			get
			{
				return this._PLZ;
			}
			set
			{
				if ((this._PLZ != value))
				{
					this.OnPLZChanging(value);
					this.SendPropertyChanging();
					this._PLZ = value;
					this.SendPropertyChanged("PLZ");
					this.OnPLZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ort", DbType="NVarChar(500)")]
		public string Ort
		{
			get
			{
				return this._Ort;
			}
			set
			{
				if ((this._Ort != value))
				{
					this.OnOrtChanging(value);
					this.SendPropertyChanging();
					this._Ort = value;
					this.SendPropertyChanged("Ort");
					this.OnOrtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kurzbezeichnung", DbType="NVarChar(500)")]
		public string Kurzbezeichnung
		{
			get
			{
				return this._Kurzbezeichnung;
			}
			set
			{
				if ((this._Kurzbezeichnung != value))
				{
					this.OnKurzbezeichnungChanging(value);
					this.SendPropertyChanging();
					this._Kurzbezeichnung = value;
					this.SendPropertyChanged("Kurzbezeichnung");
					this.OnKurzbezeichnungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAN", DbType="NVarChar(50)")]
		public string PAN
		{
			get
			{
				return this._PAN;
			}
			set
			{
				if ((this._PAN != value))
				{
					this.OnPANChanging(value);
					this.SendPropertyChanging();
					this._PAN = value;
					this.SendPropertyChanged("PAN");
					this.OnPANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BIC", DbType="NVarChar(50)")]
		public string BIC
		{
			get
			{
				return this._BIC;
			}
			set
			{
				if ((this._BIC != value))
				{
					this.OnBICChanging(value);
					this.SendPropertyChanging();
					this._BIC = value;
					this.SendPropertyChanged("BIC");
					this.OnBICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pruefziffer", DbType="NVarChar(50)")]
		public string Pruefziffer
		{
			get
			{
				return this._Pruefziffer;
			}
			set
			{
				if ((this._Pruefziffer != value))
				{
					this.OnPruefzifferChanging(value);
					this.SendPropertyChanging();
					this._Pruefziffer = value;
					this.SendPropertyChanged("Pruefziffer");
					this.OnPruefzifferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datensatznummer", DbType="NVarChar(50)")]
		public string Datensatznummer
		{
			get
			{
				return this._Datensatznummer;
			}
			set
			{
				if ((this._Datensatznummer != value))
				{
					this.OnDatensatznummerChanging(value);
					this.SendPropertyChanging();
					this._Datensatznummer = value;
					this.SendPropertyChanged("Datensatznummer");
					this.OnDatensatznummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aenderungskennzeichen", DbType="NVarChar(50)")]
		public string Aenderungskennzeichen
		{
			get
			{
				return this._Aenderungskennzeichen;
			}
			set
			{
				if ((this._Aenderungskennzeichen != value))
				{
					this.OnAenderungskennzeichenChanging(value);
					this.SendPropertyChanging();
					this._Aenderungskennzeichen = value;
					this.SendPropertyChanged("Aenderungskennzeichen");
					this.OnAenderungskennzeichenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bankleitzahlloeschung", DbType="NVarChar(50)")]
		public string Bankleitzahlloeschung
		{
			get
			{
				return this._Bankleitzahlloeschung;
			}
			set
			{
				if ((this._Bankleitzahlloeschung != value))
				{
					this.OnBankleitzahlloeschungChanging(value);
					this.SendPropertyChanging();
					this._Bankleitzahlloeschung = value;
					this.SendPropertyChanged("Bankleitzahlloeschung");
					this.OnBankleitzahlloeschungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nachfolgebankleitzahl", DbType="NVarChar(50)")]
		public string Nachfolgebankleitzahl
		{
			get
			{
				return this._Nachfolgebankleitzahl;
			}
			set
			{
				if ((this._Nachfolgebankleitzahl != value))
				{
					this.OnNachfolgebankleitzahlChanging(value);
					this.SendPropertyChanging();
					this._Nachfolgebankleitzahl = value;
					this.SendPropertyChanged("Nachfolgebankleitzahl");
					this.OnNachfolgebankleitzahlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PathPosition")]
	public partial class PathPosition
	{
		
		private int _ID;
		
		private string _Path;
		
		private string _PostionName;
		
		public PathPosition()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="int NOT NULL", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="VarChar(255)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this._Path = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostionName", DbType="VarChar(255)")]
		public string PostionName
		{
			get
			{
				return this._PostionName;
			}
			set
			{
				if ((this._PostionName != value))
				{
					this._PostionName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeLog")]
	public partial class ChangeLog
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _FirstName;
		
		private long _Expr1;
		
		private System.DateTime _Date;
		
		private string _TableName;
		
		private string _TableProperty;
		
		private System.Nullable<int> _ReferenceId;
		
		private string _Text;
		
		private int _LogTypeId;
		
		private string _Exception;
		
		private string _Login;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private string _Expr2;
		
		private int _LogUserId;
		
		public ChangeLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="BigInt NOT NULL")]
		public long Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableProperty", DbType="VarChar(50)")]
		public string TableProperty
		{
			get
			{
				return this._TableProperty;
			}
			set
			{
				if ((this._TableProperty != value))
				{
					this._TableProperty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceId", DbType="int")]
		public System.Nullable<int> ReferenceId
		{
			get
			{
				return this._ReferenceId;
			}
			set
			{
				if ((this._ReferenceId != value))
				{
					this._ReferenceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this._Text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTypeId", DbType="Int NOT NULL")]
		public int LogTypeId
		{
			get
			{
				return this._LogTypeId;
			}
			set
			{
				if ((this._LogTypeId != value))
				{
					this._LogTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="VarChar(MAX)")]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this._Exception = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this._Login = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this._LastLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Expr2
		{
			get
			{
				return this._Expr2;
			}
			set
			{
				if ((this._Expr2 != value))
				{
					this._Expr2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUserId", DbType="int NOT NULL")]
		public int LogUserId
		{
			get
			{
				return this._LogUserId;
			}
			set
			{
				if ((this._LogUserId != value))
				{
					this._LogUserId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChangeLogColumNames")]
	public partial class ChangeLogColumNames : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TableName;
		
		private string _ColumnNames;
		
		private string _IdColumnName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnColumnNamesChanging(string value);
    partial void OnColumnNamesChanged();
    partial void OnIdColumnNameChanging(string value);
    partial void OnIdColumnNameChanged();
    #endregion
		
		public ChangeLogColumNames()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnNames", DbType="VarChar(MAX)")]
		public string ColumnNames
		{
			get
			{
				return this._ColumnNames;
			}
			set
			{
				if ((this._ColumnNames != value))
				{
					this.OnColumnNamesChanging(value);
					this.SendPropertyChanging();
					this._ColumnNames = value;
					this.SendPropertyChanged("ColumnNames");
					this.OnColumnNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdColumnName", DbType="VarChar(250)")]
		public string IdColumnName
		{
			get
			{
				return this._IdColumnName;
			}
			set
			{
				if ((this._IdColumnName != value))
				{
					this.OnIdColumnNameChanging(value);
					this.SendPropertyChanging();
					this._IdColumnName = value;
					this.SendPropertyChanged("IdColumnName");
					this.OnIdColumnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerProduct")]
	public partial class CustomerProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _ProductId;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnProductIdChanging(System.Nullable<int> value);
    partial void OnProductIdChanged();
    #endregion
		
		public CustomerProduct()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="int", IsPrimaryKey=true)]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="int", IsPrimaryKey=true)]
		public System.Nullable<int> ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerProduct", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerProduct.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerProduct.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CustomerProduct", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.CustomerProduct.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.CustomerProduct.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocketList")]
	public partial class DocketList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocketListNumber;
		
		private string _DispatchOrderNumber;
		
		private System.Nullable<bool> _IsSelfDispatch;
		
		private System.Nullable<bool> _IsPrinted;
		
		private int _RecipientAdressId;
		
		private string _Recipient;
		
		private System.Nullable<int> _DocumentId;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ChangeDate;
		
		private EntitySet<Order> _Order;
		
		private EntityRef<Adress> _Adress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDispatchOrderNumberChanging(string value);
    partial void OnDispatchOrderNumberChanged();
    partial void OnIsSelfDispatchChanging(System.Nullable<bool> value);
    partial void OnIsSelfDispatchChanged();
    partial void OnIsPrintedChanging(System.Nullable<bool> value);
    partial void OnIsPrintedChanged();
    partial void OnRecipientAdressIdChanging(int value);
    partial void OnRecipientAdressIdChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnDocumentIdChanging(System.Nullable<int> value);
    partial void OnDocumentIdChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public DocketList()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Adress = default(EntityRef<Adress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DocketListNumber", Storage="_DocketListNumber", DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._DocketListNumber;
			}
			set
			{
				if ((this._DocketListNumber != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._DocketListNumber = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DispatchOrderNumber", DbType="VarChar(50)")]
		public string DispatchOrderNumber
		{
			get
			{
				return this._DispatchOrderNumber;
			}
			set
			{
				if ((this._DispatchOrderNumber != value))
				{
					this.OnDispatchOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._DispatchOrderNumber = value;
					this.SendPropertyChanged("DispatchOrderNumber");
					this.OnDispatchOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelfDispatch", DbType="Bit")]
		public System.Nullable<bool> IsSelfDispatch
		{
			get
			{
				return this._IsSelfDispatch;
			}
			set
			{
				if ((this._IsSelfDispatch != value))
				{
					this.OnIsSelfDispatchChanging(value);
					this.SendPropertyChanging();
					this._IsSelfDispatch = value;
					this.SendPropertyChanged("IsSelfDispatch");
					this.OnIsSelfDispatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit")]
		public System.Nullable<bool> IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientAdressId", DbType="int NOT NULL")]
		public int RecipientAdressId
		{
			get
			{
				return this._RecipientAdressId;
			}
			set
			{
				if ((this._RecipientAdressId != value))
				{
					if (this._Adress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipientAdressIdChanging(value);
					this.SendPropertyChanging();
					this._RecipientAdressId = value;
					this.SendPropertyChanged("RecipientAdressId");
					this.OnRecipientAdressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentId", DbType="int")]
		public System.Nullable<int> DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="datetime2(2)")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime2(2)")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="datetime2(2)")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocketList_Order", Storage="_Order", ThisKey="Id", OtherKey="DocketListNumber")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Adress_DocketList", Storage="_Adress", ThisKey="RecipientAdressId", OtherKey="Id", IsForeignKey=true)]
		public Adress Adress
		{
			get
			{
				return this._Adress.Entity;
			}
			set
			{
				Adress previousValue = this._Adress.Entity;
				if (((previousValue != value) 
							|| (this._Adress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Adress.Entity = null;
						previousValue.DocketList.Remove(this);
					}
					this._Adress.Entity = value;
					if ((value != null))
					{
						value.DocketList.Add(this);
						this._RecipientAdressId = value.Id;
					}
					else
					{
						this._RecipientAdressId = default(int);
					}
					this.SendPropertyChanged("Adress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.DocketList = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.DocketList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorativeChargeAccounts")]
	public partial class AuthorativeChargeAccounts
	{
		
		private int _OrderItemId;
		
		private int _InvoiceId;
		
		private int _InvoiceItemAccountItemId;
		
		private int _InvoiceItemId;
		
		private string _RevenueAccountText;
		
		private bool _IsAuthorativeCharge;
		
		public AuthorativeChargeAccounts()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderItemId", DbType="int NOT NULL")]
		public int OrderItemId
		{
			get
			{
				return this._OrderItemId;
			}
			set
			{
				if ((this._OrderItemId != value))
				{
					this._OrderItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="int NOT NULL")]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceItemAccountItemId", DbType="int NOT NULL")]
		public int InvoiceItemAccountItemId
		{
			get
			{
				return this._InvoiceItemAccountItemId;
			}
			set
			{
				if ((this._InvoiceItemAccountItemId != value))
				{
					this._InvoiceItemAccountItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceItemId", DbType="int NOT NULL")]
		public int InvoiceItemId
		{
			get
			{
				return this._InvoiceItemId;
			}
			set
			{
				if ((this._InvoiceItemId != value))
				{
					this._InvoiceItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueAccountText", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RevenueAccountText
		{
			get
			{
				return this._RevenueAccountText;
			}
			set
			{
				if ((this._RevenueAccountText != value))
				{
					this._RevenueAccountText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuthorativeCharge", DbType="Bit NOT NULL")]
		public bool IsAuthorativeCharge
		{
			get
			{
				return this._IsAuthorativeCharge;
			}
			set
			{
				if ((this._IsAuthorativeCharge != value))
				{
					this._IsAuthorativeCharge = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GetAccountNumbers")]
	public partial class GetAccountNumber
	{
		
		private int _InvoiceId;
		
		private int _Id;
		
		private int _AccountId;
		
		private string _AccountNumber;
		
		private System.Nullable<int> _LocationId;
		
		public GetAccountNumber()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int NOT NULL")]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this._InvoiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int")]
		public System.Nullable<int> LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this._LocationId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
